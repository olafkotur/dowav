{"version":3,"sources":["constants/MenuOptionConstants.ts","context/NavigationContext.ts","components/Menu.tsx","components/ControlPane.tsx","d3/d3Colors.ts","d3/d3LineGradients.ts","d3/d3Graph.ts","components/views/Graph.tsx","errors/errors.ts","constants/FetchConstants.ts","hooks/useFetch.ts","components/styled/Loader.tsx","errors/ErrorMessage.tsx","components/views/GraphView.tsx","context/LocationDataContext.ts","components/HistoryList.tsx","three/Lab3D.ts","components/Lab3DModel.tsx","components/views/MovementView.tsx","components/Switch.tsx","components/Dashboard.tsx","App.tsx","index.tsx"],"names":["TEMPERATURE","MOISTURE","LIGHT","React","createContext","currentOption","setCurrentOption","n","Error","menuOptions","name","indented","icon","size","color","MENU_OPTIONS","Menu","useContext","NavigationContext","className","map","option","key","onClick","ControlPane","live","setLive","setTimePeriod","shouldRenderLive","conf","timePeriod","t","selected","ti","d3Colors","d3LineGradients","drawGradient","svg","viewport","colorPallete","data","colors","i","length","push","offset","grad","select","empty","append","attr","width","height","selectAll","enter","d","D3Graph","options","svgHTML","margin","liveData","xScale","yScale","tooltip","line","xAxis","yAxis","clip","dashedLines","legend","title","this","top","bottom","left","right","d3","scaleData","getXScale","getYScale","parentNode","classed","Array","keys","Object","style","text","console","log","plot","k","computeData","obj","newData","Math","ceil","tempAvg","tempTime","j","index","value","time","newObj","zoneData","resize","html","remove","on","plotLive","slice","axisLeft","ticks","floor","transition","duration","call","axisBottom","x","Date","y","curve","datum","bind","getTranslate","shift","offsetX","offsetY","dot","invert","findIndex","sX","toLocaleString","toFixed","showTip","ease","bottomAxis","scale","forEach","node","getTotalLength","domain","range","minmax","Graph","control","container","useRef","useState","d3chart","setD3chart","useEffect","current","setData","setConf","filter","el","document","getElementById","id","removeChild","childNodes","chart","clean","rect","getBoundingClientRect","setViewport","goLive","setInterval","a","fetch","json","zone","addLiveData","error","clearInterval","ref","goHistory","se","z","fetchErrorMessages","timeout","message","actions","fetchFail","noData","FetchConstants","hostname","checkCache","lastFetched","window","localStorage","getItem","moment","isAfter","add","cache","JSON","parse","generateQueryString","params","undefined","string","useFetch","useCache","query","endpoint","loading","state","setState","fetchData","Promise","resolve","reject","now","setTimeout","response","clearTimeout","setItem","stringify","then","catch","refetch","rotate","keyframes","Circle","styled","circle","Loader","stroke","ErrorMessage","onRefetch","warn","includes","GraphView","count","setCount","setSize","graphRef","toLowerCase","from","to","updateSize","addEventListener","removeEventListener","every","zoneA","zoneB","zoneC","appendData","HistoryList","LocationDataContext","background","format","val","Lab3D","scene","camera","renderer","controls","cube","locationData","labModelLoaded","createBox","geometry","THREE","cubeMaterials","transparent","opacity","side","position","set","updateViewport","aspect","updateProjectionMatrix","highlightZone","addLocationData","animate","requestAnimationFrame","update","render","lookAt","OrbitControls","minDistance","maxDistance","maxPolarAngle","PI","alpha","setClearColor","appendChild","domElement","sun","lightRight","lightLeft","GLTFLoader","load","process","gltf","xhr","loaded","total","Lab3DModel","lab3d","setLab3d","last","outline","MovementView","savedData","setSavedData","Provider","prev","Switch","component","Dashboard","App","navigation","setNavigation","s","ReactDOM"],"mappings":"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","file":"static/js/main.ab5aaa72.chunk.js","sourcesContent":["export const DASHBOARD = 'Dashboard';\r\nexport const TEMPERATURE = 'Temperature';\r\nexport const MOISTURE = 'Moisture';\r\nexport const LIGHT = 'Light';\r\nexport const MOVEMENT = 'Movement';\r\nexport const TWITTER = 'Twitter';\r\nexport const SETTINGS = 'Settings';\r\n","import React from 'react';\r\nimport { DASHBOARD } from '../constants/MenuOptionConstants';\r\n\r\ntype NavigationContext = {\r\n    currentOption: string;\r\n    setCurrentOption(option: string): void;\r\n};\r\n\r\nexport default React.createContext<NavigationContext>({\r\n    currentOption: DASHBOARD,\r\n    setCurrentOption: n => {\r\n        throw new Error('setCurrentOption() not implemented.');\r\n    }\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport { MdDashboard, MdSettings, MdLocationSearching } from \"react-icons/md\";\r\nimport { FaTemperatureLow, FaTwitter } from \"react-icons/fa\";\r\nimport { IoIosWater } from \"react-icons/io\";\r\nimport { GoLightBulb } from \"react-icons/go\";\r\nimport * as MENU_OPTIONS from \"../constants/MenuOptionConstants\";\r\nimport NavigationContext from \"../context/NavigationContext\";\r\n\r\ninterface IMenuOption {\r\n  name: string;\r\n  indented: boolean;\r\n  icon: any;\r\n}\r\n\r\nconst iconColor = \"white\";\r\n\r\nexport const menuOptions: Array<IMenuOption> = [\r\n  {\r\n    name: MENU_OPTIONS.DASHBOARD,\r\n    indented: false,\r\n    icon: <MdDashboard size={20} color={iconColor} />\r\n  },\r\n  {\r\n    name: MENU_OPTIONS.TEMPERATURE,\r\n    indented: true,\r\n    icon: <FaTemperatureLow size={20} color={iconColor} />\r\n  },\r\n  {\r\n    name: MENU_OPTIONS.MOISTURE,\r\n    indented: true,\r\n    icon: <IoIosWater size={20} color={iconColor} />\r\n  },\r\n  {\r\n    name: MENU_OPTIONS.LIGHT,\r\n    indented: true,\r\n    icon: <GoLightBulb size={20} color={iconColor} />\r\n  },\r\n  {\r\n    name: MENU_OPTIONS.MOVEMENT,\r\n    indented: true,\r\n    icon: <MdLocationSearching size={20} color={iconColor} />\r\n  },\r\n  {\r\n    name: MENU_OPTIONS.TWITTER,\r\n    indented: false,\r\n    icon: <FaTwitter size={20} color={iconColor} />\r\n  },\r\n  {\r\n    name: MENU_OPTIONS.SETTINGS,\r\n    indented: false,\r\n    icon: <MdSettings size={20} color={iconColor} />\r\n  }\r\n];\r\n\r\nconst Menu: React.FC = () => {\r\n  const { currentOption, setCurrentOption } = useContext(NavigationContext);\r\n  return (\r\n    <div className=\"menu\">\r\n      {menuOptions.map((option: IMenuOption) => {\r\n        return (\r\n          <div\r\n            key={option.name}\r\n            className={`item  ${\r\n              option.name === currentOption ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={() => {\r\n              if (currentOption !== option.name) setCurrentOption(option.name);\r\n            }}\r\n          >\r\n            <div className={`icon ${option.indented ? \"indent\" : \"\"}`}>\r\n              {option.icon}\r\n            </div>\r\n            <div className={`text`}>{option.name}</div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { GraphConfiguration, TimePeriod } from '../types';\r\n\r\ntype ControlPaneProps = {\r\n    shouldRenderLive: boolean;\r\n    live: boolean;\r\n    setLive(): void;\r\n    setTimePeriod: any;\r\n    conf: GraphConfiguration & { timePeriod: TimePeriod[] };\r\n};\r\n\r\nconst ControlPane: React.FC<ControlPaneProps> = ({\r\n    live,\r\n    setLive,\r\n    setTimePeriod,\r\n    shouldRenderLive,\r\n    conf\r\n}) => {\r\n    return (\r\n        <div className=\"control-pane\">\r\n            {!live ? (\r\n                <div className={`${conf.name} time-button-group`}>\r\n                    {conf.timePeriod.map((t: TimePeriod) => {\r\n                        return (\r\n                            <div\r\n                                key={t.timePeriod}\r\n                                className={`time-button ${\r\n                                    t.selected ? 'selected' : ''\r\n                                }`}\r\n                                onClick={() => {\r\n                                    if (!t.selected)\r\n                                        setTimePeriod(\r\n                                            conf.timePeriod.map(\r\n                                                (ti: TimePeriod) => {\r\n                                                    if (ti === t) {\r\n                                                        return {\r\n                                                            ...ti,\r\n                                                            selected: !ti.selected\r\n                                                        };\r\n                                                    } else {\r\n                                                        return {\r\n                                                            ...ti,\r\n                                                            selected: false\r\n                                                        };\r\n                                                    }\r\n                                                }\r\n                                            )\r\n                                        );\r\n                                }}\r\n                            >\r\n                                {`${t.timePeriod}m`}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n            {shouldRenderLive ? (\r\n                <button\r\n                    className={`${conf.name} ${live ? 'live' : ''}`}\r\n                    onClick={setLive}\r\n                >\r\n                    Live\r\n                </button>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ControlPane;\r\n","import * as MENU_OPTIONS from '../constants/MenuOptionConstants';\r\n\r\ninterface ID3Colors {\r\n    [key: string]: string[];\r\n}\r\n\r\nconst d3Colors: ID3Colors = {\r\n    [MENU_OPTIONS.TEMPERATURE]: ['#FF3D3D', '#ff7521', '#ffa500'],\r\n    [MENU_OPTIONS.MOISTURE]: ['#125D92', '#3AD8FC', '#88F9FE'],\r\n    [MENU_OPTIONS.LIGHT]: ['#EFEFEF', '#D1D1D1', '#574A4B']\r\n};\r\n\r\nexport default d3Colors;\r\n","import * as MENU_OPTIONS from '../constants/MenuOptionConstants';\r\nimport d3Colors from './d3Colors';\r\n\r\ninterface ID3LineGradients {\r\n    [key: string]: (\r\n        svg: any,\r\n        viewport: { height: number; width: number },\r\n        colorPallete: string\r\n    ) => void;\r\n}\r\n\r\nfunction drawGradient(\r\n    svg: any,\r\n    viewport: { height: number; width: number },\r\n    colorPallete: string\r\n) {\r\n    const data = [];\r\n    const colors = d3Colors[colorPallete];\r\n    for (let i = 0; i < colors.length; i++) {\r\n        if (i === 0) {\r\n            data.push({ offset: '0%', color: colors[i] });\r\n        } else {\r\n            data.push({\r\n                offset: `${100 / (colors.length - i)}%`,\r\n                color: colors[i]\r\n            });\r\n        }\r\n    }\r\n    let grad = svg.select('#linegradient');\r\n    if (grad.empty()) {\r\n        grad = svg\r\n            .append('defs')\r\n            .append('linearGradient')\r\n            .attr('id', 'linegradient')\r\n            .attr('gradientUnits', 'userSpaceOnUse');\r\n    }\r\n    grad.attr('x1', viewport.width / 2)\r\n        .attr('y1', 0)\r\n        .attr('x2', viewport.width / 2)\r\n        .attr('y2', viewport.height)\r\n        .selectAll('stop')\r\n        .data(data)\r\n        .enter()\r\n        .append('stop')\r\n        .attr('offset', function(d: any) {\r\n            return d.offset;\r\n        })\r\n        .attr('stop-color', function(d: any) {\r\n            return d.color;\r\n        });\r\n}\r\n\r\nconst d3LineGradients: ID3LineGradients = {\r\n    drawGradient: drawGradient\r\n};\r\n\r\nexport default d3LineGradients;\r\n","import * as d3 from \"d3\";\r\nimport {\r\n  IViewport,\r\n  IMargin,\r\n  IHistoryData,\r\n  MultipleHistoryData,\r\n  HistoryData,\r\n  GraphConfiguration,\r\n  TimePeriod\r\n} from \"../types\";\r\nimport * as MENU_OPTIONS from \"../constants/MenuOptionConstants\";\r\nimport d3LineGradients from \"../d3/d3LineGradients\";\r\nimport moment from \"moment\";\r\nimport d3Colors from \"./d3Colors\";\r\n\r\ntype D3GraphProps = {\r\n  viewport: IViewport;\r\n  svg: HTMLElement;\r\n  data: HistoryData;\r\n  conf: GraphConfiguration & { timePeriod: TimePeriod };\r\n};\r\n\r\nconst colors = [\"#ffa500\", \"#ff2929\", \"#7a7aed\"];\r\n\r\nexport default class D3Graph {\r\n  private svgHTML: any;\r\n  private svg: any;\r\n  private viewport: IViewport;\r\n  private margin: IMargin;\r\n  // TODO CHANGE ANY\r\n  private data: HistoryData;\r\n  private liveData: IHistoryData[];\r\n  private xScale: any;\r\n  private yScale: any;\r\n  private conf: GraphConfiguration & { timePeriod: TimePeriod };\r\n  private tooltip: any;\r\n  private line: any;\r\n  private xAxis: any;\r\n  private yAxis: any;\r\n  private clip: any;\r\n  private dashedLines: any;\r\n  private live: boolean;\r\n  private legend: any;\r\n  private title: any;\r\n  public constructor(options: D3GraphProps) {\r\n    this.live = false;\r\n    this.svgHTML = options.svg;\r\n    this.margin = {\r\n      top: 40,\r\n      bottom: 40,\r\n      left: 40,\r\n      right: 40,\r\n      ...(options.conf.margin || {})\r\n    };\r\n    this.viewport = {\r\n      width: options.viewport.width - this.margin.left - this.margin.right,\r\n      height: options.viewport.height - this.margin.top - this.margin.bottom\r\n    };\r\n    this.svg = d3\r\n      .select(options.svg)\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${this.margin.left}, ${this.margin.top})`);\r\n    this.conf = options.conf;\r\n    this.data = this.scaleData(options.data);\r\n    this.liveData = [];\r\n    this.getXScale(this.data);\r\n    this.getYScale(this.data);\r\n    this.tooltip = d3\r\n      .select(this.svgHTML.parentNode as any)\r\n      .append(\"div\")\r\n      .attr(\"class\", \"tooltip\");\r\n    this.legend = d3\r\n      .select(options.svg)\r\n      .append(\"foreignObject\")\r\n      .attr(\"width\", this.margin.right)\r\n      .attr(\"height\", \"50%\")\r\n      .attr(\r\n        \"transform\",\r\n        `translate(${this.viewport.width + this.margin.left}, ${this.viewport\r\n          .height / 2})`\r\n      )\r\n      .append(\"xhtml:div\")\r\n      .classed(\"svg-legend\", true);\r\n    if (this.data instanceof Array) {\r\n      this.line = this.svg\r\n        .append(\"path\")\r\n        .attr(\"class\", \"line\")\r\n        .attr(\r\n          \"stroke\",\r\n          this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n            this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n            this.conf.name === MENU_OPTIONS.LIGHT\r\n            ? \"url(#line-gradient)\"\r\n            : colors[0]\r\n        );\r\n    } else if (typeof this.data === \"object\") {\r\n      let keys = Object.keys(this.data);\r\n      this.line = [];\r\n      for (let i = 0; i < keys.length; i++) {\r\n        this.legend\r\n          .append(\"div\")\r\n          .classed(\"legend\", true)\r\n          .append(\"div\")\r\n          .classed(\"legend-item\", true)\r\n          .style(\"border-left\", `15px solid ${colors[i]}`)\r\n          .text(\"Zone \" + (i + 1));\r\n        this.line.push(\r\n          this.svg\r\n            .append(\"path\")\r\n            .attr(\"class\", \"line\")\r\n            .attr(\"stroke\", colors[i])\r\n        );\r\n      }\r\n    }\r\n    console.log(this.viewport);\r\n    this.title = this.svg\r\n      .append(\"text\")\r\n      .text(this.conf.title || \"\")\r\n      .attr(\"x\", this.viewport.width / 2)\r\n      .attr(\"y\", -this.margin.top / 2)\r\n      .attr(\"stroke\", d3Colors[this.conf.name][1])\r\n      .attr(\"font-size\", \"20px\");\r\n    this.clip = this.svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"clip\")\r\n      .append(\"defs\")\r\n      .append(\"clipPath\")\r\n      .attr(\"id\", \"clip\")\r\n      .append(\"rect\")\r\n      .attr(\"width\", this.viewport.width)\r\n      .attr(\"height\", this.viewport.height);\r\n    this.xAxis = d3\r\n      .select(this.svgHTML)\r\n      .append(\"g\")\r\n      .attr(\"class\", \"x-axis\");\r\n    this.yAxis = d3\r\n      .select(this.svgHTML)\r\n      .append(\"g\")\r\n      .attr(\"class\", \"y-axis\")\r\n      .attr(\"transform\", `translate(${this.margin.left}, ${this.margin.top})`);\r\n    this.dashedLines = this.svg.append(\"g\").classed(\"dashed-line-g\", true);\r\n    if (\r\n      this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n      this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n      this.conf.name === MENU_OPTIONS.LIGHT\r\n    ) {\r\n      d3LineGradients.drawGradient(this.svg, this.viewport, this.conf.name);\r\n    }\r\n  }\r\n\r\n  public setConf(\r\n    conf: GraphConfiguration & { timePeriod: TimePeriod },\r\n    data: HistoryData\r\n  ) {\r\n    this.conf = conf;\r\n    this.data = this.scaleData(data);\r\n    this.getXScale(this.data);\r\n    this.getYScale(this.data);\r\n    this.plot(\"update\");\r\n  }\r\n\r\n  private scaleData(data: HistoryData): HistoryData {\r\n    const { timePeriod } = this.conf;\r\n    if (timePeriod.timePeriod === 5) {\r\n      if (data instanceof Array) {\r\n        return [...data];\r\n      } else if (typeof data === \"object\") {\r\n        let obj: any = {};\r\n        for (let keys in data) {\r\n          obj[keys] = [...data[keys]];\r\n        }\r\n        return obj;\r\n      }\r\n    } else {\r\n      const k = timePeriod.timePeriod / 5;\r\n      return this.computeData(data, k);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  private computeData(data: HistoryData, k: number): HistoryData {\r\n    if (data instanceof Array) {\r\n      let newData = [];\r\n      const length = Math.ceil(data.length / k);\r\n      for (let i = 0; i < length - 1; i++) {\r\n        let tempAvg = 0;\r\n        let tempTime = 0;\r\n        for (let j = 0; j < k; j++) {\r\n          const index = i * k + j;\r\n          tempAvg =\r\n            j === 0 ? data[index].value : (tempAvg + data[index].value) / 2;\r\n          if (j === 0) tempTime = data[index].time;\r\n        }\r\n        newData.push({\r\n          time: tempTime,\r\n          value: tempAvg\r\n        });\r\n      }\r\n      // for (let i = 0; i < data.length; i++) {\r\n      //     if (i % k === k - 1 || i === data.length - 1) {\r\n      //         tempAvg += data[i].value;\r\n\r\n      //         const divider = i % k === k - 1 ? k : data.length % k;\r\n      //         newData.push({\r\n      //             time: tempTime,\r\n      //             value: tempAvg / divider,\r\n      //             min: 0,\r\n      //             max: 0\r\n      //         });\r\n\r\n      //         tempAvg = 0;\r\n      //         tempTime = 0;\r\n      //     } else {\r\n      //         tempAvg += data[i].value;\r\n      //         if (i % k === 0) tempTime = data[i].time;\r\n      //     }\r\n      // }\r\n      return [...newData];\r\n    } else if (typeof data === \"object\") {\r\n      const newObj: any = {};\r\n      for (let key in data) {\r\n        const zoneData = data[key];\r\n        let newData = [];\r\n        const length = Math.ceil(zoneData.length / k);\r\n        for (let i = 0; i < length - 1; i++) {\r\n          let tempAvg = 0;\r\n          let tempTime = 0;\r\n          for (let j = 0; j < k; j++) {\r\n            const index = i * k + j;\r\n            tempAvg =\r\n              j === 0\r\n                ? zoneData[index].value\r\n                : (tempAvg + zoneData[index].value) / 2;\r\n            if (j === 0) tempTime = zoneData[index].time;\r\n          }\r\n          newData.push({\r\n            time: tempTime,\r\n            value: tempAvg\r\n          });\r\n        }\r\n        newObj[key] = newData;\r\n      }\r\n      return newObj;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  public setViewport(viewport: IViewport) {\r\n    d3.select(this.svgHTML)\r\n      .attr(\"width\", viewport.width)\r\n      .attr(\"height\", viewport.height);\r\n    this.viewport = {\r\n      width: viewport.width - this.margin.left - this.margin.right,\r\n      height: viewport.height - this.margin.top - this.margin.bottom\r\n    };\r\n    this.resize();\r\n  }\r\n\r\n  public setData(data: HistoryData) {\r\n    this.data = data;\r\n    this.resize();\r\n  }\r\n\r\n  // Graphs with one source only could be live\r\n  // Add if statements if that have been changed.\r\n  public goLive(): void {\r\n    this.live = true;\r\n    this.dashedLines.html(\"\");\r\n    this.xAxis.html(\"\");\r\n    this.yAxis.html(\"\");\r\n    this.line.remove();\r\n    this.line = this.svg\r\n      .append(\"path\")\r\n      .attr(\"clip-path\", \"url(#clip)\")\r\n      .attr(\"class\", \"line\")\r\n      .attr(\r\n        \"stroke\",\r\n        this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n          this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n          this.conf.name === MENU_OPTIONS.LIGHT\r\n          ? \"url(#line-gradient)\"\r\n          : colors[0]\r\n      );\r\n    // Data go here\r\n    this.liveData = [];\r\n    d3.select(this.svgHTML).on(\"mousemove\", null);\r\n    d3.select(this.svgHTML).on(\"mouseleave\", null);\r\n  }\r\n\r\n  public addLiveData(data: IHistoryData) {\r\n    this.liveData.push(data);\r\n    this.plotLive();\r\n  }\r\n\r\n  private plotLive() {\r\n    function getTranslate(this: D3Graph): number {\r\n      if (this.liveData.length >= 90) {\r\n        let n =\r\n          this.xScale(this.liveData[0].time) -\r\n          this.xScale(this.liveData[1].time);\r\n        return n;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n    // y axis\r\n    if (this.liveData.length > 2) {\r\n      this.getYScale(this.liveData.slice(1, this.liveData.length - 1));\r\n      const axisLeft = d3\r\n        .axisLeft(this.yScale)\r\n        .ticks(Math.floor(this.viewport.height / 20));\r\n      this.yAxis\r\n        .transition()\r\n        .duration(400)\r\n        .call(axisLeft);\r\n      // x-axis\r\n      this.getXScale(this.liveData);\r\n      const axisBottom = d3\r\n        .axisBottom(this.xScale)\r\n        .ticks(Math.floor(this.viewport.height / 40));\r\n      this.xAxis\r\n        .transition()\r\n        .duration(400)\r\n        .call(axisBottom);\r\n\r\n      let line = d3\r\n        .line()\r\n        .x((d: any) => this.xScale(new Date(d.time)))\r\n        .y((d: any) => this.yScale(d.value))\r\n        .curve(d3.curveMonotoneX);\r\n\r\n      this.line\r\n        .datum(this.liveData.slice(1))\r\n        .attr(\"d\", line)\r\n        .style(\"transform\", null)\r\n        .transition()\r\n        .duration(300)\r\n        .attr(\r\n          \"stroke\",\r\n          this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n            this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n            this.conf.name === MENU_OPTIONS.LIGHT\r\n            ? \"url(#linegradient)\"\r\n            : colors[0]\r\n          // d3Colors[this.conf.name][1]\r\n        )\r\n        .style(\"transform\", `translate(${getTranslate.bind(this)()}px, 0)`);\r\n      if (this.liveData.length >= 30) {\r\n        this.liveData.shift();\r\n      }\r\n    }\r\n  }\r\n\r\n  public goHistory(): void {\r\n    this.live = false;\r\n    this.getXScale(this.data);\r\n    this.getYScale(this.data);\r\n    this.line.remove();\r\n    this.line = this.svg\r\n      .append(\"path\")\r\n      .attr(\"class\", \"line\")\r\n      .attr(\r\n        \"stroke\",\r\n        this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n          this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n          this.conf.name === MENU_OPTIONS.LIGHT\r\n          ? \"url(#line-gradient)\"\r\n          : colors[0]\r\n      );\r\n    this.plot(\"start\");\r\n  }\r\n\r\n  public showTip() {\r\n    const { offsetX, offsetY } = d3.event;\r\n    let dot = this.svg.select(\"circle\");\r\n    if (\r\n      offsetX > this.margin.left &&\r\n      offsetX < this.viewport.width + this.margin.left &&\r\n      offsetY > this.margin.top &&\r\n      offsetY < this.viewport.height + this.margin.top\r\n    ) {\r\n      let x = this.xScale.invert(offsetX - this.margin.left);\r\n      if (this.data instanceof Array) {\r\n        let index = this.data.findIndex(d => d.time > x);\r\n        let sX = this.xScale(this.data[index].time);\r\n        if (dot.empty()) {\r\n          this.svg\r\n            .append(\"circle\")\r\n            .attr(\"cx\", sX)\r\n            .attr(\"cy\", this.yScale(this.data[index].value))\r\n            .attr(\"r\", 5)\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"white\");\r\n        } else {\r\n          dot\r\n            .attr(\"cx\", this.xScale(this.data[index].time))\r\n            .attr(\"cy\", this.yScale(this.data[index].value));\r\n          this.tooltip\r\n            .html(\r\n              `<p>${new Date(\r\n                this.data[index].time\r\n              ).toLocaleString()}</p><p>Value: ${this.data[index].value.toFixed(\r\n                2\r\n              )}</p>`\r\n            )\r\n            .classed(\"show\", true)\r\n            .style(\r\n              \"top\",\r\n              Math.floor(\r\n                this.yScale(this.data[index].value) + this.margin.top - 3\r\n              ) + \"px\"\r\n            )\r\n            .style(\"left\", Math.floor(sX + this.margin.left + 5) + \"px\")\r\n            .style(\r\n              \"margin-left\",\r\n              sX > this.viewport.width / 2 ? \"-130px\" : \"0px\"\r\n            );\r\n        }\r\n      }\r\n    } else {\r\n      if (!dot.empty()) {\r\n        dot.remove();\r\n      }\r\n      this.tooltip.classed(\"show\", false);\r\n    }\r\n  }\r\n\r\n  public plot(on?: string) {\r\n    // Events\r\n    if (this.data instanceof Array && this.data.length > 1) {\r\n      d3.select(this.svgHTML).on(\"mousemove\", () => this.showTip());\r\n      d3.select(this.svgHTML).on(\"mouseleave\", () => {\r\n        this.svg.select(\"circle\").remove();\r\n        this.tooltip.classed(\"show\", false);\r\n      });\r\n    }\r\n    let t = d3\r\n      .transition()\r\n      .duration(500)\r\n      .ease(d3.easeLinear);\r\n    let line = d3\r\n      .line()\r\n      .x((d: any) => this.xScale(new Date(d.time)))\r\n      .y((d: any) => this.yScale(d.value))\r\n      .curve(d3.curveMonotoneX);\r\n    // x axis\r\n    const bottomAxis = d3\r\n      .axisBottom(this.xScale)\r\n      .ticks(Math.floor(this.viewport.width / 60));\r\n    this.xAxis\r\n      .attr(\r\n        \"transform\",\r\n        `translate(${this.margin.left}, ${this.viewport.height +\r\n          this.margin.top})`\r\n      )\r\n      .call(bottomAxis);\r\n    // y axis\r\n    const axisLeft = d3\r\n      .axisLeft(this.yScale)\r\n      .ticks(Math.floor(this.viewport.height / 20));\r\n    this.yAxis.call(axisLeft);\r\n    this.dashedLines.html(\"\");\r\n    (axisLeft.scale() as any)\r\n      .ticks(Math.floor(this.viewport.height / 20))\r\n      .forEach((d: number[]) => {\r\n        this.dashedLines\r\n          .append(\"line\")\r\n          .classed(\"dashed-line\", true)\r\n          .attr(\"x1\", 0)\r\n          .attr(\"y1\", this.yScale(d))\r\n          .attr(\"x2\", this.viewport.width)\r\n          .attr(\"y2\", this.yScale(d));\r\n      });\r\n    if (this.data instanceof Array) {\r\n      //path\r\n      this.line\r\n        .datum(this.data)\r\n        .attr(\"d\", line as any)\r\n        .attr(\r\n          \"stroke\",\r\n          this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n            this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n            this.conf.name === MENU_OPTIONS.LIGHT\r\n            ? \"url(#linegradient)\"\r\n            : colors[0]\r\n        );\r\n      if (on === \"update\") {\r\n        this.line\r\n\r\n          .attr(\r\n            \"stroke-dasharray\",\r\n            this.line.node().getTotalLength() +\r\n              \" \" +\r\n              this.line.node().getTotalLength()\r\n          )\r\n          .attr(\"stroke-dashoffset\", this.line.node().getTotalLength())\r\n          .transition()\r\n          .duration(700)\r\n          .attr(\"stroke-dashoffset\", 0);\r\n      }\r\n      if (on === \"start\") {\r\n        this.svg\r\n          .attr(\"opacity\", 0)\r\n          .transition(t as any)\r\n          .attr(\"opacity\", 1);\r\n      }\r\n      // circles\r\n      this.svg.selectAll(\".dot\");\r\n    } else if (typeof this.data === \"object\") {\r\n      let i = 0;\r\n      for (let key in this.data) {\r\n        //path\r\n        this.line[i].datum(this.data[key]).attr(\"d\", <any>line);\r\n        if (on === \"update\") {\r\n          this.line[i]\r\n            .attr(\r\n              \"stroke-dasharray\",\r\n              this.line[i].node().getTotalLength() +\r\n                \" \" +\r\n                this.line[i].node().getTotalLength()\r\n            )\r\n            .attr(\"stroke-dashoffset\", this.line[i].node().getTotalLength())\r\n            .transition()\r\n            .duration(700)\r\n            .attr(\"stroke-dashoffset\", 0);\r\n        }\r\n        if (on === \"start\") {\r\n          this.svg\r\n            .attr(\"opacity\", 0)\r\n            .transition(<any>t)\r\n            .attr(\"opacity\", 1);\r\n        }\r\n        // circles\r\n        this.svg.selectAll(\".dot\");\r\n        i++;\r\n      }\r\n    }\r\n  }\r\n\r\n  public clean() {\r\n    delete this.svg;\r\n    delete this.svgHTML;\r\n    delete this.viewport;\r\n    delete this.margin;\r\n    delete this.data;\r\n    delete this.liveData;\r\n    delete this.yScale;\r\n    delete this.xScale;\r\n    delete this.conf;\r\n    delete this.tooltip;\r\n    delete this.line;\r\n    delete this.xAxis;\r\n    delete this.yAxis;\r\n    delete this.clip;\r\n    delete this.dashedLines;\r\n  }\r\n\r\n  public resize() {\r\n    if (\r\n      this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n      this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n      this.conf.name === MENU_OPTIONS.LIGHT\r\n    ) {\r\n      d3LineGradients.drawGradient(this.svg, this.viewport, this.conf.name);\r\n    }\r\n    this.title\r\n      .attr(\"x\", this.viewport.width / 2)\r\n      .attr(\"y\", -this.margin.top / 2);\r\n    d3.select(this.svgHTML)\r\n      .select(\"foreignObject\")\r\n      .attr(\r\n        \"transform\",\r\n        `translate(${this.viewport.width + this.margin.left}, ${this.viewport\r\n          .height / 2})`\r\n      );\r\n    this.clip\r\n      .attr(\"width\", this.viewport.width)\r\n      .attr(\"height\", this.viewport.height);\r\n    if (this.liveData.length !== 0) {\r\n      console.log(this.liveData);\r\n      this.getXScale(this.liveData);\r\n      this.getYScale(this.liveData);\r\n      this.plotLive();\r\n    } else if (!this.live) {\r\n      this.getXScale(this.data);\r\n      this.getYScale(this.data);\r\n      this.plot();\r\n    }\r\n  }\r\n\r\n  private getXScale(data: HistoryData) {\r\n    if (data instanceof Array) {\r\n      this.xScale = d3\r\n        .scaleTime()\r\n        .domain([new Date(data[0].time), new Date(data[data.length - 1].time)])\r\n        .range([0, this.viewport.width]);\r\n    } else if (typeof data === \"object\") {\r\n      let minmax = [];\r\n      for (let key in data) {\r\n        minmax.push(...d3.extent(data[key], d => d.time));\r\n      }\r\n      minmax = d3.extent(minmax as any);\r\n      this.xScale = d3\r\n        .scaleTime()\r\n        .domain([new Date(minmax[0] as any), new Date(minmax[1] as any)])\r\n        .range([0, this.viewport.width]);\r\n    }\r\n  }\r\n\r\n  private getYScale(data: HistoryData) {\r\n    if (data instanceof Array) {\r\n      this.yScale = d3\r\n        .scaleLinear()\r\n        .domain(<[number, number]>d3.extent(data, d => d.value))\r\n        .range([this.viewport.height, 0]);\r\n    } else if (typeof data === \"object\") {\r\n      let minmax: (number | undefined)[] = [];\r\n      for (let key in data) {\r\n        minmax.push(...d3.extent(data[key], d => d.value));\r\n      }\r\n      this.yScale = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(minmax as any) as any)\r\n        .range([this.viewport.height, 0]);\r\n    }\r\n  }\r\n}\r\n","import React, { useEffect, useRef, useState, useLayoutEffect } from \"react\";\r\nimport {\r\n  IViewport,\r\n  HistoryData,\r\n  IHistoryData,\r\n  GraphConfiguration,\r\n  TimePeriod\r\n} from \"../../types\";\r\nimport * as d3 from \"d3\";\r\nimport ControlPane from \"../ControlPane\";\r\nimport D3Graph from \"../../d3/d3Graph\";\r\n\r\ntype GraphProps = {\r\n  viewport: IViewport;\r\n  data: HistoryData;\r\n  conf: GraphConfiguration;\r\n  control?: {\r\n    shouldRenderLive: boolean;\r\n  };\r\n};\r\n\r\nconst Graph: React.FC<GraphProps> = ({\r\n  viewport,\r\n  data,\r\n  conf,\r\n  control = { shouldRenderLive: true }\r\n}) => {\r\n  const container = useRef<HTMLDivElement>(null);\r\n  const [live, setLive] = useState<boolean>(false);\r\n  const [timePeriod, setTimePeriod] = useState<TimePeriod[]>([\r\n    { timePeriod: 5, selected: true },\r\n    { timePeriod: 15, selected: false },\r\n    { timePeriod: 30, selected: false }\r\n  ]);\r\n  const [d3chart, setD3chart] = useState<D3Graph | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (data && d3chart && container.current) {\r\n      d3chart.setData(data);\r\n    }\r\n  }, [data, d3chart]);\r\n\r\n  useEffect(() => {\r\n    if (d3chart) {\r\n      d3chart.setConf(\r\n        {\r\n          ...conf,\r\n          timePeriod: timePeriod.filter((t: TimePeriod) => t.selected)[0]\r\n        },\r\n        data\r\n      );\r\n    }\r\n  }, [conf, d3chart, data, timePeriod]);\r\n\r\n  useEffect(() => {\r\n    if (d3chart) {\r\n      d3chart.plot(\"start\");\r\n    }\r\n  }, [d3chart]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      let el = document.getElementById(conf.id);\r\n      if (el && container.current) {\r\n        container.current.removeChild(el);\r\n      }\r\n    };\r\n  }, [conf.id]);\r\n  useEffect(() => {\r\n    if (container.current) {\r\n      let el = container.current;\r\n      if (el.childNodes.length === 1) {\r\n        d3.select(el)\r\n          .append(\"svg\")\r\n          .attr(\"id\", conf.id)\r\n          .attr(\"width\", viewport.width)\r\n          .attr(\"height\", viewport.height);\r\n        const svg = document.getElementById(conf.id);\r\n        if (svg) {\r\n          const chart = new D3Graph({\r\n            svg,\r\n            viewport,\r\n            data,\r\n            conf: {\r\n              ...conf,\r\n              timePeriod: timePeriod.filter((t: TimePeriod) => t.selected)[0]\r\n            }\r\n          });\r\n          setD3chart(chart);\r\n        }\r\n\r\n        return () => {\r\n          if (d3chart) {\r\n            d3chart.clean();\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }, [conf, d3chart, data, timePeriod, viewport]);\r\n\r\n  useEffect(() => {\r\n    if (container.current) {\r\n      const svg = document.getElementById(conf.id);\r\n      if (svg) {\r\n        const rect = svg.getBoundingClientRect();\r\n        if (rect.height !== viewport.height || rect.width !== viewport.width) {\r\n          if (d3chart) {\r\n            d3chart.setViewport(viewport);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [conf.id, d3chart, viewport]);\r\n\r\n  useEffect(() => {\r\n    if (d3chart) {\r\n      if (live) {\r\n        d3chart.goLive();\r\n        const id = setInterval(async () => {\r\n          const json = await fetch(\r\n            `https://dowav-api.herokuapp.com/api/live/${conf.name}`\r\n          );\r\n          const data = await json.json();\r\n          if (conf.zone) {\r\n            d3chart.addLiveData(data[conf.zone - 1]);\r\n          } else {\r\n            console.error(\r\n              \"Please specify zone for Graphh with name \" + conf.name\r\n            );\r\n          }\r\n        }, 2000);\r\n        return () => {\r\n          clearInterval(id);\r\n        };\r\n      }\r\n    }\r\n  }, [conf.name, conf.zone, d3chart, live]);\r\n\r\n  return (\r\n    <div className={`graph ${conf.name} ${live ? \"live\" : \"\"}`}>\r\n      <div ref={container}>\r\n        <ControlPane\r\n          shouldRenderLive={control.shouldRenderLive}\r\n          live={live}\r\n          setLive={() => {\r\n            if (live && d3chart) {\r\n              d3chart.goHistory();\r\n            }\r\n            setLive(!live);\r\n          }}\r\n          setTimePeriod={(d: TimePeriod[]) => {\r\n            let se = 5;\r\n            d.forEach(z => {\r\n              if (z.selected) {\r\n                se = z.timePeriod;\r\n              }\r\n            });\r\n            let k = se / 5;\r\n            if (data.length > k * 2) setTimePeriod(d);\r\n          }}\r\n          conf={{ ...conf, timePeriod: timePeriod }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import { ErrorMessages } from '../types';\r\n\r\nexport const fetchErrorMessages: ErrorMessages = {\r\n    timeout: {\r\n        title: 'Error',\r\n        message:\r\n            'Looks like the server is taking to long to respond, please try again in sometime.',\r\n        actions: ['refetch']\r\n    },\r\n    fetchFail: {\r\n        title: 'Error',\r\n        message: \"We can't get data right now. Try a little bit later\",\r\n        actions: ['refetch']\r\n    },\r\n    noData: {\r\n        title: 'No Data.',\r\n        message: 'Seems like there is no data available at the moment.',\r\n        actions: ['refetch']\r\n    }\r\n};\r\n","type FetchConstants = {\r\n    hostname: string;\r\n};\r\n\r\nconst FetchConstants: FetchConstants = {\r\n    hostname: 'https://dowav-api.herokuapp.com'\r\n};\r\n\r\nexport default FetchConstants;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { UseFetchState } from \"../types/index\";\r\nimport { fetchErrorMessages } from \"../errors/errors\";\r\nimport FetchConstants from \"../constants/FetchConstants\";\r\n\r\nfunction checkCache(key: string): any | null {\r\n  const lastFetched = window.localStorage.getItem(key + \"lastFetched\");\r\n  if (\r\n    lastFetched &&\r\n    moment(+lastFetched).isAfter(moment().add(-5, \"minutes\"))\r\n  ) {\r\n    const cache = window.localStorage.getItem(key);\r\n    if (cache) return JSON.parse(cache);\r\n  }\r\n  return null;\r\n}\r\n\r\ntype Params = {\r\n  [key: string]: string | number;\r\n};\r\n\r\ntype Options = {\r\n  useCache: boolean;\r\n  query: {\r\n    endpoint: string;\r\n    params?: Params;\r\n  };\r\n  refetch: number;\r\n};\r\n\r\nfunction generateQueryString(params: Params | undefined): string {\r\n  if (params === undefined) return \"\";\r\n  const keys = Object.keys(params);\r\n  if (keys.length === 0) return \"\";\r\n  let string = \"?\";\r\n  for (let i = 0; i < keys.length; i++) {\r\n    string += `${keys[i]}=${params[keys[i]]}${\r\n      i === keys.length - 1 ? \"\" : \"&\"\r\n    }`;\r\n  }\r\n  return string;\r\n}\r\n\r\nexport default function useFetch(options: Options): UseFetchState {\r\n  const cache = options.useCache ? checkCache(options.query.endpoint) : null;\r\n  const [state, setState] = useState<UseFetchState>({\r\n    loading: cache ? false : true,\r\n    data: cache || null,\r\n    error: null\r\n  });\r\n\r\n  function fetchData() {\r\n    new Promise(async (resolve, reject) => {\r\n      const time = Date.now();\r\n      const id = setTimeout(() => {\r\n        reject(fetchErrorMessages.timeout);\r\n      }, 10000);\r\n      try {\r\n        const response = await fetch(\r\n          `${FetchConstants.hostname}${\r\n            options.query.endpoint\r\n          }${generateQueryString(options.query.params)}`\r\n        );\r\n        const json = await response.json();\r\n        console.log(json);\r\n        clearTimeout(id);\r\n        if (json === null) reject(fetchErrorMessages.noData);\r\n        if (options.useCache) {\r\n          window.localStorage.setItem(\r\n            options.query.endpoint,\r\n            JSON.stringify(json)\r\n          );\r\n          window.localStorage.setItem(\r\n            options.query.endpoint + \"lastFetched\",\r\n            Date.now() + \"\"\r\n          );\r\n        }\r\n        if (Date.now() - time > 500) {\r\n          resolve(json);\r\n        } else {\r\n          setTimeout(() => {\r\n            resolve(json);\r\n          }, Date.now() - time);\r\n        }\r\n      } catch (err) {\r\n        reject(fetchErrorMessages.fetchFail);\r\n      }\r\n    })\r\n      .then(d => {\r\n        setState({\r\n          loading: false,\r\n          data: d,\r\n          error: null\r\n        });\r\n      })\r\n      .catch(error => {\r\n        setState({\r\n          loading: false,\r\n          error,\r\n          data: null\r\n        });\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (options.refetch !== 0) {\r\n      if (options.useCache) {\r\n        const data = checkCache(options.query.endpoint);\r\n        if (data) {\r\n          setState({ loading: false, data, error: null });\r\n        } else {\r\n          setState({ loading: true, data: null, error: null });\r\n          fetchData();\r\n        }\r\n      } else {\r\n        setState({ loading: true, data: null, error: null });\r\n        fetchData();\r\n      }\r\n    }\r\n  }, [fetchData, options.query.endpoint, options.refetch, options.useCache]);\r\n\r\n  useEffect(() => {\r\n    if (!cache) {\r\n      fetchData();\r\n    }\r\n  }, [cache, fetchData]);\r\n  return { ...state };\r\n}\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { IViewport } from \"../../types\";\r\nimport d3Colors from \"../../d3/d3Colors\";\r\nimport * as MENU_OPTIONS from \"../../constants/MenuOptionConstants\";\r\n\r\nconst rotate = keyframes`\r\n    0%{\r\n        stroke-dashoffset: 290;\r\n    }\r\n    50%{\r\n        stroke-dashoffset: 50;\r\n    }\r\n    100%{\r\n        stroke-dashoffset: 290;\r\n    }\r\n`;\r\n\r\nconst Circle = styled.circle`\r\n  cx: 50%;\r\n  cy: 50%;\r\n  r: 50;\r\n  fill: none;\r\n  stroke-width: 10px;\r\n  stroke-dasharray: 160;\r\n  transform-origin: 50% 50%;\r\n  animation: ${rotate} 2s ease infinite;\r\n`;\r\n\r\ntype LoaderProps = {\r\n  size: IViewport | { width: number | string; height: number | string };\r\n  currentOption?: string;\r\n};\r\n\r\nconst Loader: React.FC<LoaderProps> = ({\r\n  size,\r\n  currentOption = MENU_OPTIONS.LIGHT\r\n}) => {\r\n  return (\r\n    <svg\r\n      stroke={d3Colors[currentOption][1]}\r\n      width={size.width}\r\n      height={size.height}\r\n      className=\"loader\"\r\n    >\r\n      <Circle />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { FetchError, IViewport } from \"../types\";\r\nimport { IoIosRefresh } from \"react-icons/io\";\r\n\r\nconst ErrorMessage: React.FC<{\r\n  error: FetchError;\r\n  onRefetch?: any;\r\n  size?: { width: number | string; height: number | string };\r\n}> = ({\r\n  error,\r\n  onRefetch = () => console.warn(\"You haven't passed a fucntion\"),\r\n  size = { width: \"100%\", height: \"100%\" }\r\n}) => {\r\n  return (\r\n    <div className=\"error-box\" style={{ ...size }}>\r\n      <h1>{error.title}</h1>\r\n      <p>{error.message}</p>\r\n      {error && error.actions && error.actions.includes(\"refetch\") ? (\r\n        <div>\r\n          <IoIosRefresh\r\n            size=\"40\"\r\n            color=\"white\"\r\n            className=\"refetch-icon\"\r\n            onClick={onRefetch}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { IViewport, IHistoryData, MultipleHistoryData } from \"../../types\";\r\nimport Graph from \"./Graph\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport Loader from \"../styled/Loader\";\r\nimport ErrorMessage from \"../../errors/ErrorMessage\";\r\n\r\ntype GraphViewProps = {\r\n  currentOption: string;\r\n};\r\n\r\nconst GraphView: React.FC<GraphViewProps> = ({ currentOption }) => {\r\n  const [count, setCount] = useState<number>(0);\r\n  const [size, setSize] = useState<IViewport | null>(null);\r\n  const graphRef = useRef<HTMLDivElement>(null);\r\n  const { loading, data, error } = useFetch({\r\n    useCache: true,\r\n    query: {\r\n      endpoint: `/api/historic/${currentOption.toLowerCase()}`,\r\n      params: {\r\n        from: 1,\r\n        to: Math.floor(Date.now() / 1000)\r\n      }\r\n    },\r\n    refetch: count\r\n  });\r\n\r\n  const updateSize = () => {\r\n    if (graphRef.current) {\r\n      let viewport = graphRef.current.getBoundingClientRect();\r\n      setSize({ width: viewport.width, height: viewport.height });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graphRef.current) {\r\n      updateSize();\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={graphRef} className=\"graph-view\">\r\n      {size ? (\r\n        <>\r\n          {loading ? (\r\n            <Loader size={size} currentOption={currentOption} />\r\n          ) : error ? (\r\n            <div className=\"error-message\">\r\n              <ErrorMessage\r\n                error={error}\r\n                onRefetch={() => {\r\n                  setCount(count + 1);\r\n                }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"graph-view-row\">\r\n                {data[0] instanceof Array && data[0].length > 0 ? (\r\n                  <Graph\r\n                    data={data[0]}\r\n                    viewport={{\r\n                      width: (size.width - 50) / 3,\r\n                      height: (size.height - 100) / 2\r\n                    }}\r\n                    conf={{\r\n                      title: \"Zone 1\",\r\n                      name: currentOption,\r\n                      id: currentOption + 1,\r\n                      zone: 1\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <ErrorMessage\r\n                    error={{\r\n                      title: \"No data.\",\r\n                      message: \"It seems like there is no data at the moment.\"\r\n                    }}\r\n                    size={{\r\n                      width: (size.width - 50) / 3,\r\n                      height: size.height / 2\r\n                    }}\r\n                  />\r\n                )}\r\n                {data[1] instanceof Array && data[1].length > 0 ? (\r\n                  <Graph\r\n                    data={data[1]}\r\n                    viewport={{\r\n                      width: (size.width - 50) / 3,\r\n                      height: (size.height - 100) / 2\r\n                    }}\r\n                    conf={{\r\n                      title: \"Zone 2\",\r\n                      name: currentOption,\r\n                      id: currentOption + 2,\r\n                      zone: 2\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <ErrorMessage\r\n                    error={{\r\n                      title: \"No data.\",\r\n                      message: \"It seems like there is no data at the moment.\"\r\n                    }}\r\n                    size={{\r\n                      width: (size.width - 50) / 3,\r\n                      height: size.height / 2\r\n                    }}\r\n                  />\r\n                )}\r\n                {data[2] instanceof Array && data[2].length > 0 ? (\r\n                  <Graph\r\n                    data={data[2]}\r\n                    viewport={{\r\n                      width: (size.width - 50) / 3,\r\n                      height: (size.height - 100) / 2\r\n                    }}\r\n                    conf={{\r\n                      title: \"Zone 3\",\r\n                      name: currentOption,\r\n                      id: currentOption + 3,\r\n                      zone: 3\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <ErrorMessage\r\n                    error={{\r\n                      title: \"No data.\",\r\n                      message: \"It seems like there is no data at the moment.\"\r\n                    }}\r\n                    size={{\r\n                      width: (size.width - 50) / 3,\r\n                      height: size.height / 2\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"graph-view-row\">\r\n                {data.every((d: any) => d) ? (\r\n                  <Graph\r\n                    data={{\r\n                      zoneA: data[0],\r\n                      zoneB: data[1],\r\n                      zoneC: data[2]\r\n                    }}\r\n                    control={{ shouldRenderLive: false }}\r\n                    viewport={{\r\n                      width: size.width - 10,\r\n                      height: (size.height - 100) / 2\r\n                    }}\r\n                    conf={{\r\n                      margin: { top: 40, left: 40, right: 120, bottom: 40 },\r\n                      title: \"All Zones\",\r\n                      name: currentOption,\r\n                      id: currentOption + 4\r\n                    }}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            </>\r\n          )}\r\n          {/* <div className=\"graph-view-row\">\r\n                     <GraphData\r\n                            setGraphsData={setGraphsData}\r\n                            currentOption={currentOption}\r\n                            zone={1}\r\n                            size={{\r\n                                width: (size.width - 50) / 3,\r\n                                height: (size.height - 100) / 2\r\n                            }}\r\n                        />\r\n                        <GraphData\r\n                            setGraphsData={setGraphsData}\r\n                            currentOption={currentOption}\r\n                            zone={2}\r\n                            size={{\r\n                                width: (size.width - 50) / 3,\r\n                                height: (size.height - 100) / 2\r\n                            }}\r\n                        />\r\n                        <GraphData\r\n                            setGraphsData={setGraphsData}\r\n                            currentOption={currentOption}\r\n                            zone={3}\r\n                            size={{\r\n                                width: (size.width - 50) / 3,\r\n                                height: (size.height - 100) / 2\r\n                            }}\r\n                        /> \r\n                        {[1, 2, 3].map((d: number) => (\r\n                            <GraphData\r\n                                key={d}\r\n                                setGraphsData={setGraphsData}\r\n                                currentOption={currentOption}\r\n                                zone={d}\r\n                                size={{\r\n                                    width: (size.width - 50) / 3,\r\n                                    height: (size.height - 100) / 2\r\n                                }}\r\n                            />\r\n                        ))}\r\n                        {data ? (\r\n                            <>\r\n                                <Graph\r\n                                    data={data[0]}\r\n                                    viewport={{\r\n                                        width: (size.width - 50) / 3,\r\n                                        height: (size.height - 100) / 2\r\n                                    }}\r\n                                    conf={{\r\n                                        name: currentOption,\r\n                                        id: currentOption + 1\r\n                                    }}\r\n                                />\r\n                                <Graph\r\n                                    data={data[1]}\r\n                                    viewport={{\r\n                                        width: (size.width - 50) / 3,\r\n                                        height: (size.height - 100) / 2\r\n                                    }}\r\n                                    conf={{\r\n                                        name: currentOption,\r\n                                        id: currentOption + 2\r\n                                    }}\r\n                                />\r\n                                <Graph\r\n                                    data={data[2]}\r\n                                    viewport={{\r\n                                        width: (size.width - 50) / 3,\r\n                                        height: (size.height - 100) / 2\r\n                                    }}\r\n                                    conf={{\r\n                                        name: currentOption,\r\n                                        id: currentOption + 3\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"graph-view-row\">\r\n                        {false ? (\r\n                            <Graph\r\n                                data={graphsData}\r\n                                control={{ shouldRenderLive: false }}\r\n                                viewport={{\r\n                                    width: size.width - 10,\r\n                                    height: (size.height - 100) / 2\r\n                                }}\r\n                                conf={{\r\n                                    name: currentOption,\r\n                                    id: currentOption + 4\r\n                                }}\r\n                            />\r\n                        ) : null}\r\n                    </div> */}\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphView;\r\n","import React from \"react\";\r\nimport { LocationData } from \"../types\";\r\n\r\ntype LocationDataContext = {\r\n  data: LocationData[];\r\n  appendData(data: LocationData): void;\r\n};\r\n\r\nexport default React.createContext<LocationDataContext>({\r\n  data: [],\r\n  appendData: n => {\r\n    throw new Error(\"appenData() not implemented.\");\r\n  }\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport moment from \"moment\";\r\nimport LocationDataContext from \"../context/LocationDataContext\";\r\n\r\nconst HistoryList: React.FC = () => {\r\n  const { data } = useContext(LocationDataContext);\r\n  return (\r\n    <div className=\"history-list\">\r\n      <h1>History</h1>\r\n      <h4>Last 24 hours</h4>\r\n      <div className=\"historic-item-list\">\r\n        {data.map((d, i) => {\r\n          if (d.value === 0)\r\n            return (\r\n              <div\r\n                key={d.time + \" - \" + i}\r\n                className=\"historic-item\"\r\n                style={{ background: `rgb(120, 120, 120)` }}\r\n              >{`${moment(d.time).format(\"D MMM HH:mm:ss\")} - No Location\r\n        `}</div>\r\n            );\r\n          let val = 255 - (d.value - 1) * 30;\r\n          return (\r\n            <div\r\n              key={d.time + \" - \" + i}\r\n              className=\"historic-item\"\r\n              style={{ background: `rgb(${val}, ${val}, ${val})` }}\r\n            >{`${moment(d.time).format(\"D MMM HH:mm:ss\")} - Zone ${\r\n              d.value\r\n            }`}</div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryList;\r\n","import * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport { IViewport, LocationData } from \"../types\";\r\n\r\ntype Lab3DProps = {\r\n  viewport: IViewport;\r\n  container: HTMLDivElement;\r\n};\r\n\r\nexport default class Lab3D {\r\n  private scene: THREE.Scene;\r\n  private camera: THREE.PerspectiveCamera;\r\n  private renderer: THREE.WebGLRenderer;\r\n  private controls: OrbitControls;\r\n  private cube: THREE.Mesh;\r\n  private locationData: LocationData | null;\r\n  private labModelLoaded: boolean;\r\n  constructor(options: Lab3DProps) {\r\n    this.scene = new THREE.Scene();\r\n    this.locationData = null;\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      options.viewport.width / options.viewport.height,\r\n      0.1,\r\n      1000\r\n    );\r\n    this.camera.position.set(-14, 10, -9);\r\n    this.camera.lookAt(0, 0, 0);\r\n    this.controls = new OrbitControls(this.camera, options.container);\r\n    this.controls.minDistance = 3;\r\n    this.controls.maxDistance = 60;\r\n    this.controls.maxPolarAngle = Math.PI / 2.1;\r\n    this.renderer = new THREE.WebGLRenderer({ alpha: true });\r\n    this.renderer.setClearColor(0x000000, 0);\r\n    this.renderer.setSize(options.viewport.width, options.viewport.height);\r\n    options.container.appendChild(this.renderer.domElement);\r\n    this.labModelLoaded = false;\r\n\r\n    // Add a light\r\n    const sun = new THREE.PointLight(0xffffff, 1.6, 0);\r\n    sun.position.set(0, 40, 0);\r\n    this.scene.add(sun);\r\n    const lightRight = new THREE.PointLight(0xffffff, 0.8, 0);\r\n    lightRight.position.set(-20, 12, -25);\r\n    this.scene.add(lightRight);\r\n    const lightLeft = new THREE.PointLight(0xffffff, 0.8, 0);\r\n    lightLeft.position.set(18, 12, 18);\r\n    this.scene.add(lightLeft);\r\n\r\n    // Create box\r\n    this.cube = this.createBox();\r\n\r\n    // Add 3d model\r\n    let loader = new GLTFLoader();\r\n    loader.load(\r\n      `${process.env.PUBLIC_URL}/labmodel.glb`,\r\n      gltf => {\r\n        this.labModelLoaded = true;\r\n        this.scene.add(gltf.scene);\r\n        this.controls.update();\r\n      },\r\n      xhr => {\r\n        console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\r\n      },\r\n      error => {\r\n        console.log(\"ERROR. Can't load the model\");\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    requestAnimationFrame(this.animate);\r\n    this.animate();\r\n  }\r\n\r\n  private createBox = () => {\r\n    let geometry = new THREE.BoxGeometry(10.2, 2.5, 4.5333);\r\n    let cubeMaterials = [\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.65,\r\n        side: THREE.DoubleSide\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.7,\r\n        side: THREE.DoubleSide\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.66,\r\n        side: THREE.DoubleSide\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.67,\r\n        side: THREE.DoubleSide\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.68,\r\n        side: THREE.DoubleSide\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.69,\r\n        side: THREE.DoubleSide\r\n      })\r\n    ];\r\n    let cube = new THREE.Mesh(geometry, cubeMaterials);\r\n    cube.position.set(-14, 10, -10000);\r\n    return cube;\r\n  };\r\n\r\n  public updateViewport = (viewport: IViewport) => {\r\n    this.camera.aspect = viewport.width / viewport.height;\r\n    this.camera.updateProjectionMatrix();\r\n    this.renderer.setSize(viewport.width, viewport.height);\r\n  };\r\n\r\n  private highlightZone = () => {\r\n    if (this.locationData) {\r\n      this.cube.position.set(\r\n        0,\r\n        1.4,\r\n        4.53 * (this.locationData.value - 1) - 4.53\r\n      );\r\n    }\r\n  };\r\n\r\n  public addLocationData = (data: LocationData) => {\r\n    if (data.value !== 0) {\r\n      this.locationData = data;\r\n      this.highlightZone();\r\n    } else {\r\n      this.scene.remove(this.cube);\r\n    }\r\n  };\r\n\r\n  private animate = () => {\r\n    requestAnimationFrame(this.animate);\r\n    if (this.labModelLoaded) {\r\n      this.scene.remove(this.cube);\r\n      this.scene.add(this.cube);\r\n    }\r\n    this.controls.update();\r\n\r\n    this.renderer.render(this.scene, this.camera);\r\n  };\r\n}\r\n","import React, { useRef, useState, useEffect, useContext } from \"react\";\r\nimport { IViewport } from \"../types\";\r\nimport Lab3D from \"../three/Lab3D\";\r\nimport LocationDataContext from \"../context/LocationDataContext\";\r\n\r\ntype Lab3DModelProps = {\r\n  viewport: IViewport;\r\n};\r\n\r\nconst Lab3DModel: React.FC<Lab3DModelProps> = ({ viewport }) => {\r\n  const container = useRef<HTMLDivElement>(null);\r\n  const [lab3d, setLab3d] = useState<Lab3D | null>(null);\r\n  const { data, appendData } = useContext(LocationDataContext);\r\n\r\n  useEffect(() => {\r\n    if (container.current && !lab3d) {\r\n      console.log(\"Creating new lab\");\r\n      setLab3d(new Lab3D({ viewport, container: container.current }));\r\n    }\r\n  }, [container.current]);\r\n\r\n  useEffect(() => {\r\n    if (lab3d) {\r\n      lab3d.updateViewport(viewport);\r\n    }\r\n  }, [viewport]);\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0 && lab3d) {\r\n      let last = data[data.length - 1];\r\n      lab3d.addLocationData(last);\r\n      let id = setInterval(async () => {\r\n        try {\r\n          const response = await fetch(\r\n            \"https://dowav-api.herokuapp.com/api/location/live\"\r\n          );\r\n          const json = await response.json();\r\n          console.log(json);\r\n          appendData(json);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }, 500);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [data, lab3d]);\r\n\r\n  return (\r\n    <div\r\n      ref={container}\r\n      style={{\r\n        width: viewport.width,\r\n        height: viewport.height,\r\n        outline: \"none\"\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Lab3DModel;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { IViewport, LocationData } from \"../../types\";\r\nimport HistoryList from \"../HistoryList\";\r\nimport Lab3DModel from \"../Lab3DModel\";\r\nimport LocationDataContext from \"../../context/LocationDataContext\";\r\nimport Loader from \"../styled/Loader\";\r\nimport ErrorMessage from \"../../errors/ErrorMessage\";\r\n\r\nconst MovementView: React.FC = () => {\r\n  const [count, setCount] = useState(0);\r\n  const [savedData, setSavedData] = useState<LocationData[]>([]);\r\n  const [size, setSize] = useState<IViewport | null>(null);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const { loading, data, error } = useFetch({\r\n    useCache: false,\r\n    query: {\r\n      endpoint: `/api/location/historic`\r\n    },\r\n    refetch: count\r\n  });\r\n  const updateSize = () => {\r\n    if (ref.current) {\r\n      let viewport = ref.current.getBoundingClientRect();\r\n      setSize({ width: viewport.width, height: viewport.height });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      updateSize();\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, [ref.current]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setSavedData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div ref={ref} className=\"movement-view\">\r\n      {size ? (\r\n        <>\r\n          <LocationDataContext.Provider\r\n            value={{\r\n              data: savedData,\r\n              appendData: d => {\r\n                if (savedData.length === 0) {\r\n                  setSavedData(prev => {\r\n                    return [...prev, d];\r\n                  });\r\n                } else {\r\n                  let last = savedData[savedData.length - 1];\r\n                  if (last.time < d.time) {\r\n                    setSavedData(prev => {\r\n                      return [...prev, d];\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Lab3DModel viewport={{ ...size, width: size.width - 250 }} />\r\n            {loading ? (\r\n              <Loader size={{ width: 250, height: \"100%\" }} />\r\n            ) : error ? (\r\n              <ErrorMessage\r\n                error={{\r\n                  title: \"Something bad happened.\",\r\n                  message:\r\n                    \"We can't get location data at the moment. Please try later.\"\r\n                }}\r\n                size={{ width: 250, height: \"100%\" }}\r\n              />\r\n            ) : data ? (\r\n              <HistoryList />\r\n            ) : null}\r\n          </LocationDataContext.Provider>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovementView;\r\n","import React, { useContext } from \"react\";\r\nimport NavigationContext from \"../context/NavigationContext\";\r\nimport * as MENU_OPTIONS from \"../constants/MenuOptionConstants\";\r\nimport DashboardView from \"./views/DashboardView\";\r\nimport GraphView from \"./views/GraphView\";\r\nimport MovementView from \"./views/MovementView\";\r\nimport { IoIosConstruct } from \"react-icons/io\";\r\n\r\nconst Switch: React.FC = () => {\r\n  const { currentOption } = useContext(NavigationContext);\r\n\r\n  let component = null;\r\n  switch (currentOption) {\r\n    // case MENU_OPTIONS.DASHBOARD:\r\n    //   component = <DashboardView />;\r\n    //   break;\r\n    case MENU_OPTIONS.TEMPERATURE:\r\n    case MENU_OPTIONS.MOISTURE:\r\n    case MENU_OPTIONS.LIGHT:\r\n      component = (\r\n        <GraphView key={currentOption} currentOption={currentOption} />\r\n      );\r\n      break;\r\n    case MENU_OPTIONS.MOVEMENT:\r\n      component = <MovementView />;\r\n      break;\r\n    default:\r\n      component = (\r\n        <div className=\"not-implemented\">\r\n          <h1>This page is under construction</h1>\r\n          <IoIosConstruct size={180} />\r\n        </div>\r\n      );\r\n  }\r\n\r\n  return <div className=\"switch\">{component}</div>;\r\n};\r\n\r\nexport default Switch;\r\n","import React from 'react';\r\nimport Menu from './Menu';\r\nimport Switch from './Switch';\r\n\r\nconst Dashboard: React.FC = () => {\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Menu />\r\n            <Switch />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport \"./main.scss\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport NavigationContext from \"./context/NavigationContext\";\r\nimport { TEMPERATURE } from \"./constants/MenuOptionConstants\";\r\n\r\nconst App: React.FC = () => {\r\n  const [navigation, setNavigation] = useState(TEMPERATURE);\r\n\r\n  return (\r\n    <NavigationContext.Provider\r\n      value={{\r\n        currentOption: navigation,\r\n        setCurrentOption: s => {\r\n          setNavigation(s);\r\n        }\r\n      }}\r\n    >\r\n      <Dashboard />\r\n    </NavigationContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}