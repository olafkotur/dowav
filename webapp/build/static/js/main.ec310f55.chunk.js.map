{"version":3,"sources":["constants/MenuOptionConstants.ts","context/NavigationContext.ts","components/Menu.tsx","components/views/DashboardView.tsx","components/ControlPane.tsx","d3/d3Colors.ts","d3/d3LineGradients.ts","d3/d3Graph.ts","components/views/Graph.tsx","errors/errors.ts","constants/FetchConstants.ts","hooks/useFetch.ts","components/styled/Loader.tsx","errors/ErrorMessage.tsx","components/views/GraphView.tsx","context/LocationDataContext.ts","components/HistoryList.tsx","three/Lab3D.ts","components/Lab3DModel.tsx","components/views/MovementView.tsx","components/Switch.tsx","components/Dashboard.tsx","App.tsx","index.tsx"],"names":["TEMPERATURE","MOISTURE","LIGHT","React","createContext","currentOption","setCurrentOption","n","Error","menuOptions","name","indented","icon","size","color","MENU_OPTIONS","Menu","useContext","NavigationContext","className","map","option","key","onClick","DashboardView","ControlPane","live","setLive","setTimePeriod","shouldRenderLive","conf","timePeriod","t","selected","ti","d3Colors","d3LineGradients","drawGradient","svg","viewport","colorPallete","data","colors","i","length","push","offset","grad","select","empty","append","attr","width","height","selectAll","enter","d","D3Graph","options","svgHTML","margin","liveData","xScale","yScale","tooltip","line","xAxis","yAxis","clip","dashedLines","this","top","bottom","left","right","d3","scaleData","getXScale","getYScale","parentNode","Array","keys","Object","classed","plot","k","computeData","obj","newData","Math","ceil","tempAvg","tempTime","j","index","value","time","newObj","zoneData","resize","html","remove","on","plotLive","slice","axisLeft","ticks","floor","transition","duration","call","axisBottom","x","Date","y","curve","datum","style","bind","getTranslate","shift","offsetX","offsetY","dot","invert","findIndex","sX","toLocaleString","toFixed","showTip","ease","bottomAxis","scale","forEach","node","getTotalLength","console","log","domain","range","minmax","Graph","control","container","useRef","useState","d3chart","setD3chart","useEffect","current","setData","setConf","filter","el","document","getElementById","id","removeChild","childNodes","chart","clean","rect","getBoundingClientRect","setViewport","goLive","setInterval","a","fetch","json","zone","addLiveData","error","clearInterval","ref","goHistory","fetchErrorMessages","timeout","title","message","actions","fetchFail","noData","FetchConstants","hostname","checkCache","lastFetched","window","localStorage","getItem","moment","isAfter","add","cache","JSON","parse","generateQueryString","params","undefined","string","useFetch","useCache","query","endpoint","loading","state","setState","fetchData","Promise","resolve","reject","now","setTimeout","response","clearTimeout","setItem","stringify","then","catch","refetch","rotate","keyframes","Circle","styled","circle","Loader","stroke","ErrorMessage","onRefetch","warn","includes","GraphView","count","setCount","setSize","graphRef","toLowerCase","from","to","updateSize","addEventListener","removeEventListener","zoneA","zoneB","zoneC","appendData","HistoryList","LocationDataContext","val","background","format","Lab3D","scene","camera","renderer","controls","cube","locationData","createBox","geometry","THREE","cubeMaterials","transparent","opacity","side","updateViewport","aspect","updateProjectionMatrix","highlightZone","position","set","addLocationData","animate","requestAnimationFrame","update","render","OrbitControls","alpha","setClearColor","appendChild","domElement","sun","lightRight","lightLeft","GLTFLoader","load","process","gltf","lookAt","xhr","loaded","total","Lab3DModel","lab3d","setLab3d","last","outline","MovementView","savedData","setSavedData","Provider","prev","Switch","component","Dashboard","App","navigation","setNavigation","s","ReactDOM"],"mappings":"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","file":"static/js/main.ec310f55.chunk.js","sourcesContent":["export const DASHBOARD = 'Dashboard';\r\nexport const TEMPERATURE = 'Temperature';\r\nexport const MOISTURE = 'Moisture';\r\nexport const LIGHT = 'Light';\r\nexport const MOVEMENT = 'Movement';\r\nexport const TWITTER = 'Twitter';\r\nexport const SETTINGS = 'Settings';\r\n","import React from 'react';\r\nimport { DASHBOARD } from '../constants/MenuOptionConstants';\r\n\r\ntype NavigationContext = {\r\n    currentOption: string;\r\n    setCurrentOption(option: string): void;\r\n};\r\n\r\nexport default React.createContext<NavigationContext>({\r\n    currentOption: DASHBOARD,\r\n    setCurrentOption: n => {\r\n        throw new Error('setCurrentOption() not implemented.');\r\n    }\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { MdDashboard, MdSettings } from 'react-icons/md';\r\nimport { FaTemperatureLow, FaTwitter } from 'react-icons/fa';\r\nimport { IoIosWater } from 'react-icons/io';\r\nimport { GoPerson, GoLightBulb } from 'react-icons/go';\r\nimport * as MENU_OPTIONS from '../constants/MenuOptionConstants';\r\nimport NavigationContext from '../context/NavigationContext';\r\n\r\ninterface IMenuOption {\r\n    name: string;\r\n    indented: boolean;\r\n    icon: any;\r\n}\r\n\r\nconst iconColor = 'white';\r\n\r\nexport const menuOptions: Array<IMenuOption> = [\r\n    {\r\n        name: MENU_OPTIONS.DASHBOARD,\r\n        indented: false,\r\n        icon: <MdDashboard size={20} color={iconColor} />\r\n    },\r\n    {\r\n        name: MENU_OPTIONS.TEMPERATURE,\r\n        indented: true,\r\n        icon: <FaTemperatureLow size={20} color={iconColor} />\r\n    },\r\n    {\r\n        name: MENU_OPTIONS.MOISTURE,\r\n        indented: true,\r\n        icon: <IoIosWater size={20} color={iconColor} />\r\n    },\r\n    {\r\n        name: MENU_OPTIONS.LIGHT,\r\n        indented: true,\r\n        icon: <GoLightBulb size={20} color={iconColor} />\r\n    },\r\n    {\r\n        name: MENU_OPTIONS.MOVEMENT,\r\n        indented: true,\r\n        icon: <GoPerson size={20} color={iconColor} />\r\n    },\r\n    {\r\n        name: MENU_OPTIONS.TWITTER,\r\n        indented: false,\r\n        icon: <FaTwitter size={20} color={iconColor} />\r\n    },\r\n    {\r\n        name: MENU_OPTIONS.SETTINGS,\r\n        indented: false,\r\n        icon: <MdSettings size={20} color={iconColor} />\r\n    }\r\n];\r\n\r\nconst Menu: React.FC = () => {\r\n    const { currentOption, setCurrentOption } = useContext(NavigationContext);\r\n    return (\r\n        <div className=\"menu\">\r\n            {menuOptions.map((option: IMenuOption) => {\r\n                return (\r\n                    <div\r\n                        key={option.name}\r\n                        className={`item  ${\r\n                            option.name === currentOption ? 'selected' : ''\r\n                        }`}\r\n                        onClick={() => {\r\n                            if (currentOption !== option.name)\r\n                                setCurrentOption(option.name);\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={`icon ${\r\n                                option.indented ? 'indent' : ''\r\n                            }`}\r\n                        >\r\n                            {option.icon}\r\n                        </div>\r\n                        <div className={`text`}>{option.name}</div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\n\r\nconst DashboardView: React.FC = () => {\r\n    return (\r\n        <div>\r\n            I suggest to show here the status of IoT devices.\r\n            <br />\r\n            Would be cool to have some kind of history as well.\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardView;\r\n","import React from 'react';\r\nimport { GraphConfiguration, TimePeriod } from '../types';\r\n\r\ntype ControlPaneProps = {\r\n    shouldRenderLive: boolean;\r\n    live: boolean;\r\n    setLive(): void;\r\n    setTimePeriod: any;\r\n    conf: GraphConfiguration & { timePeriod: TimePeriod[] };\r\n};\r\n\r\nconst ControlPane: React.FC<ControlPaneProps> = ({\r\n    live,\r\n    setLive,\r\n    setTimePeriod,\r\n    shouldRenderLive,\r\n    conf\r\n}) => {\r\n    return (\r\n        <div className=\"control-pane\">\r\n            {!live ? (\r\n                <div className={`${conf.name} time-button-group`}>\r\n                    {conf.timePeriod.map((t: TimePeriod) => {\r\n                        return (\r\n                            <div\r\n                                key={t.timePeriod}\r\n                                className={`time-button ${\r\n                                    t.selected ? 'selected' : ''\r\n                                }`}\r\n                                onClick={() => {\r\n                                    if (!t.selected)\r\n                                        setTimePeriod(\r\n                                            conf.timePeriod.map(\r\n                                                (ti: TimePeriod) => {\r\n                                                    if (ti === t) {\r\n                                                        return {\r\n                                                            ...ti,\r\n                                                            selected: !ti.selected\r\n                                                        };\r\n                                                    } else {\r\n                                                        return {\r\n                                                            ...ti,\r\n                                                            selected: false\r\n                                                        };\r\n                                                    }\r\n                                                }\r\n                                            )\r\n                                        );\r\n                                }}\r\n                            >\r\n                                {`${t.timePeriod}m`}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n            {shouldRenderLive ? (\r\n                <button\r\n                    className={`${conf.name} ${live ? 'live' : ''}`}\r\n                    onClick={setLive}\r\n                >\r\n                    Live\r\n                </button>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ControlPane;\r\n","import * as MENU_OPTIONS from '../constants/MenuOptionConstants';\r\n\r\ninterface ID3Colors {\r\n    [key: string]: string[];\r\n}\r\n\r\nconst d3Colors: ID3Colors = {\r\n    [MENU_OPTIONS.TEMPERATURE]: ['#FF3D3D', '#ff7521', '#ffa500'],\r\n    [MENU_OPTIONS.MOISTURE]: ['#125D92', '#3AD8FC', '#88F9FE'],\r\n    [MENU_OPTIONS.LIGHT]: ['#EFEFEF', '#D1D1D1', '#574A4B']\r\n};\r\n\r\nexport default d3Colors;\r\n","import * as MENU_OPTIONS from '../constants/MenuOptionConstants';\r\nimport d3Colors from './d3Colors';\r\n\r\ninterface ID3LineGradients {\r\n    [key: string]: (\r\n        svg: any,\r\n        viewport: { height: number; width: number },\r\n        colorPallete: string\r\n    ) => void;\r\n}\r\n\r\nfunction drawGradient(\r\n    svg: any,\r\n    viewport: { height: number; width: number },\r\n    colorPallete: string\r\n) {\r\n    const data = [];\r\n    const colors = d3Colors[colorPallete];\r\n    for (let i = 0; i < colors.length; i++) {\r\n        if (i === 0) {\r\n            data.push({ offset: '0%', color: colors[i] });\r\n        } else {\r\n            data.push({\r\n                offset: `${100 / (colors.length - i)}%`,\r\n                color: colors[i]\r\n            });\r\n        }\r\n    }\r\n    let grad = svg.select('#linegradient');\r\n    if (grad.empty()) {\r\n        grad = svg\r\n            .append('defs')\r\n            .append('linearGradient')\r\n            .attr('id', 'linegradient')\r\n            .attr('gradientUnits', 'userSpaceOnUse');\r\n    }\r\n    grad.attr('x1', viewport.width / 2)\r\n        .attr('y1', 0)\r\n        .attr('x2', viewport.width / 2)\r\n        .attr('y2', viewport.height)\r\n        .selectAll('stop')\r\n        .data(data)\r\n        .enter()\r\n        .append('stop')\r\n        .attr('offset', function(d: any) {\r\n            return d.offset;\r\n        })\r\n        .attr('stop-color', function(d: any) {\r\n            return d.color;\r\n        });\r\n}\r\n\r\nconst d3LineGradients: ID3LineGradients = {\r\n    drawGradient: drawGradient\r\n};\r\n\r\nexport default d3LineGradients;\r\n","import * as d3 from \"d3\";\r\nimport {\r\n  IViewport,\r\n  IMargin,\r\n  IHistoryData,\r\n  MultipleHistoryData,\r\n  HistoryData,\r\n  GraphConfiguration,\r\n  TimePeriod\r\n} from \"../types\";\r\nimport * as MENU_OPTIONS from \"../constants/MenuOptionConstants\";\r\nimport d3LineGradients from \"../d3/d3LineGradients\";\r\nimport moment from \"moment\";\r\nimport d3Colors from \"./d3Colors\";\r\n\r\ntype D3GraphProps = {\r\n  viewport: IViewport;\r\n  svg: HTMLElement;\r\n  data: HistoryData;\r\n  conf: GraphConfiguration & { timePeriod: TimePeriod };\r\n};\r\n\r\nconst colors = [\"#ffa500\", \"#ff2929\", \"#7a7aed\"];\r\n\r\nexport default class D3Graph {\r\n  private svgHTML: any;\r\n  private svg: any;\r\n  private viewport: IViewport;\r\n  private margin: IMargin;\r\n  // TODO CHANGE ANY\r\n  private data: HistoryData;\r\n  private liveData: IHistoryData[];\r\n  private xScale: any;\r\n  private yScale: any;\r\n  private conf: GraphConfiguration & { timePeriod: TimePeriod };\r\n  private tooltip: any;\r\n  private line: any;\r\n  private xAxis: any;\r\n  private yAxis: any;\r\n  private clip: any;\r\n  private dashedLines: any;\r\n  private live: boolean;\r\n  public constructor(options: D3GraphProps) {\r\n    this.live = false;\r\n    this.svgHTML = options.svg;\r\n    this.margin = { top: 40, bottom: 40, left: 40, right: 40 };\r\n    this.viewport = {\r\n      width: options.viewport.width - this.margin.left - this.margin.right,\r\n      height: options.viewport.height - this.margin.top - this.margin.bottom\r\n    };\r\n    this.svg = d3\r\n      .select(options.svg)\r\n      .append(\"g\")\r\n      .attr(\r\n        \"transform\",\r\n        `translate(${this.margin.left}, ${this.margin.right})`\r\n      );\r\n    this.conf = options.conf;\r\n    this.data = this.scaleData(options.data);\r\n    this.liveData = [];\r\n    this.getXScale(this.data);\r\n    this.getYScale(this.data);\r\n    this.tooltip = d3\r\n      .select(this.svgHTML.parentNode as any)\r\n      .append(\"div\")\r\n      .attr(\"class\", \"tooltip\");\r\n    if (this.data instanceof Array) {\r\n      this.line = this.svg\r\n        .append(\"path\")\r\n        .attr(\"class\", \"line\")\r\n        .attr(\r\n          \"stroke\",\r\n          this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n            this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n            this.conf.name === MENU_OPTIONS.LIGHT\r\n            ? \"url(#line-gradient)\"\r\n            : colors[0]\r\n        );\r\n    } else if (typeof this.data === \"object\") {\r\n      let keys = Object.keys(this.data);\r\n      this.line = [];\r\n      for (let i = 0; i < keys.length; i++) {\r\n        this.line.push(\r\n          this.svg\r\n            .append(\"path\")\r\n            .attr(\"class\", \"line\")\r\n            .attr(\"stroke\", colors[i])\r\n        );\r\n      }\r\n    }\r\n    this.clip = this.svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"clip\")\r\n      .append(\"defs\")\r\n      .append(\"clipPath\")\r\n      .attr(\"id\", \"clip\")\r\n      .append(\"rect\")\r\n      .attr(\"width\", this.viewport.width)\r\n      .attr(\"height\", this.viewport.height);\r\n    this.xAxis = d3\r\n      .select(this.svgHTML)\r\n      .append(\"g\")\r\n      .attr(\"class\", \"x-axis\");\r\n    this.yAxis = d3\r\n      .select(this.svgHTML)\r\n      .append(\"g\")\r\n      .attr(\"class\", \"y-axis\")\r\n      .attr(\"transform\", `translate(${this.margin.left}, ${this.margin.top})`);\r\n    this.dashedLines = this.svg.append(\"g\").classed(\"dashed-line-g\", true);\r\n    if (\r\n      this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n      this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n      this.conf.name === MENU_OPTIONS.LIGHT\r\n    ) {\r\n      d3LineGradients.drawGradient(this.svg, this.viewport, this.conf.name);\r\n    }\r\n  }\r\n\r\n  public setConf(\r\n    conf: GraphConfiguration & { timePeriod: TimePeriod },\r\n    data: HistoryData\r\n  ) {\r\n    this.conf = conf;\r\n    this.data = this.scaleData(data);\r\n    this.getXScale(this.data);\r\n    this.getYScale(this.data);\r\n    this.plot(\"update\");\r\n  }\r\n\r\n  private scaleData(data: HistoryData): HistoryData {\r\n    const { timePeriod } = this.conf;\r\n    if (timePeriod.timePeriod === 5) {\r\n      if (data instanceof Array) {\r\n        return [...data];\r\n      } else if (typeof data === \"object\") {\r\n        let obj: any = {};\r\n        for (let keys in data) {\r\n          obj[keys] = [...data[keys]];\r\n        }\r\n        return obj;\r\n      }\r\n    } else {\r\n      const k = timePeriod.timePeriod / 5;\r\n      return this.computeData(data, k);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  private computeData(data: HistoryData, k: number): HistoryData {\r\n    if (data instanceof Array) {\r\n      let newData = [];\r\n      const length = Math.ceil(data.length / k);\r\n      for (let i = 0; i < length - 1; i++) {\r\n        let tempAvg = 0;\r\n        let tempTime = 0;\r\n        for (let j = 0; j < k; j++) {\r\n          const index = i * k + j;\r\n          tempAvg =\r\n            j === 0 ? data[index].value : (tempAvg + data[index].value) / 2;\r\n          if (j === 0) tempTime = data[index].time;\r\n        }\r\n        newData.push({\r\n          time: tempTime,\r\n          value: tempAvg\r\n        });\r\n      }\r\n      // for (let i = 0; i < data.length; i++) {\r\n      //     if (i % k === k - 1 || i === data.length - 1) {\r\n      //         tempAvg += data[i].value;\r\n\r\n      //         const divider = i % k === k - 1 ? k : data.length % k;\r\n      //         newData.push({\r\n      //             time: tempTime,\r\n      //             value: tempAvg / divider,\r\n      //             min: 0,\r\n      //             max: 0\r\n      //         });\r\n\r\n      //         tempAvg = 0;\r\n      //         tempTime = 0;\r\n      //     } else {\r\n      //         tempAvg += data[i].value;\r\n      //         if (i % k === 0) tempTime = data[i].time;\r\n      //     }\r\n      // }\r\n      return [...newData];\r\n    } else if (typeof data === \"object\") {\r\n      const newObj: any = {};\r\n      for (let key in data) {\r\n        const zoneData = data[key];\r\n        let newData = [];\r\n        const length = Math.ceil(zoneData.length / k);\r\n        for (let i = 0; i < length - 1; i++) {\r\n          let tempAvg = 0;\r\n          let tempTime = 0;\r\n          for (let j = 0; j < k; j++) {\r\n            const index = i * k + j;\r\n            tempAvg =\r\n              j === 0\r\n                ? zoneData[index].value\r\n                : (tempAvg + zoneData[index].value) / 2;\r\n            if (j === 0) tempTime = zoneData[index].time;\r\n          }\r\n          newData.push({\r\n            time: tempTime,\r\n            value: tempAvg\r\n          });\r\n        }\r\n        newObj[key] = newData;\r\n      }\r\n      return newObj;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  public setViewport(viewport: IViewport) {\r\n    d3.select(this.svgHTML)\r\n      .attr(\"width\", viewport.width)\r\n      .attr(\"height\", viewport.height);\r\n    this.viewport = {\r\n      width: viewport.width - this.margin.left - this.margin.right,\r\n      height: viewport.height - this.margin.top - this.margin.bottom\r\n    };\r\n    this.resize();\r\n  }\r\n\r\n  public setData(data: HistoryData) {\r\n    this.data = data;\r\n    this.resize();\r\n  }\r\n\r\n  // Graphs with one source only could be live\r\n  // Add if statements if that have been changed.\r\n  public goLive(): void {\r\n    this.live = true;\r\n    this.dashedLines.html(\"\");\r\n    this.xAxis.html(\"\");\r\n    this.yAxis.html(\"\");\r\n    this.line.remove();\r\n    this.line = this.svg\r\n      .append(\"path\")\r\n      .attr(\"clip-path\", \"url(#clip)\")\r\n      .attr(\"class\", \"line\")\r\n      .attr(\r\n        \"stroke\",\r\n        this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n          this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n          this.conf.name === MENU_OPTIONS.LIGHT\r\n          ? \"url(#line-gradient)\"\r\n          : colors[0]\r\n      );\r\n    // Data go here\r\n    this.liveData = [];\r\n    d3.select(this.svgHTML).on(\"mousemove\", null);\r\n    d3.select(this.svgHTML).on(\"mouseleave\", null);\r\n  }\r\n\r\n  public addLiveData(data: IHistoryData) {\r\n    this.liveData.push(data);\r\n    this.plotLive();\r\n  }\r\n\r\n  private plotLive() {\r\n    function getTranslate(this: D3Graph): number {\r\n      if (this.liveData.length >= 30) {\r\n        let n =\r\n          this.xScale(this.liveData[0].time) -\r\n          this.xScale(this.liveData[1].time);\r\n        return n;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n    // y axis\r\n    if (this.liveData.length > 2) {\r\n      this.getYScale(this.liveData.slice(1, this.liveData.length - 1));\r\n      const axisLeft = d3\r\n        .axisLeft(this.yScale)\r\n        .ticks(Math.floor(this.viewport.height / 20));\r\n      this.yAxis\r\n        .transition()\r\n        .duration(400)\r\n        .call(axisLeft);\r\n      // x-axis\r\n      this.getXScale(this.liveData);\r\n      const axisBottom = d3\r\n        .axisBottom(this.xScale)\r\n        .ticks(Math.floor(this.viewport.height / 40));\r\n      this.xAxis\r\n        .transition()\r\n        .duration(400)\r\n        .call(axisBottom);\r\n\r\n      let line = d3\r\n        .line()\r\n        .x((d: any) => this.xScale(new Date(d.time)))\r\n        .y((d: any) => this.yScale(d.value))\r\n        .curve(d3.curveMonotoneX);\r\n\r\n      this.line\r\n        .datum(this.liveData.slice(1))\r\n        .attr(\"d\", line)\r\n        .style(\"transform\", null)\r\n        .transition()\r\n        .duration(300)\r\n        .attr(\r\n          \"stroke\",\r\n          this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n            this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n            this.conf.name === MENU_OPTIONS.LIGHT\r\n            ? \"url(#linegradient)\"\r\n            : colors[0]\r\n          // d3Colors[this.conf.name][1]\r\n        )\r\n        .style(\"transform\", `translate(${getTranslate.bind(this)()}px, 0)`);\r\n      if (this.liveData.length >= 30) {\r\n        this.liveData.shift();\r\n      }\r\n    }\r\n  }\r\n\r\n  public goHistory(): void {\r\n    this.live = false;\r\n    this.getXScale(this.data);\r\n    this.getYScale(this.data);\r\n    this.line.remove();\r\n    this.line = this.svg\r\n      .append(\"path\")\r\n      .attr(\"class\", \"line\")\r\n      .attr(\r\n        \"stroke\",\r\n        this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n          this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n          this.conf.name === MENU_OPTIONS.LIGHT\r\n          ? \"url(#line-gradient)\"\r\n          : colors[0]\r\n      );\r\n    this.plot(\"start\");\r\n  }\r\n\r\n  public showTip() {\r\n    const { offsetX, offsetY } = d3.event;\r\n    let dot = this.svg.select(\"circle\");\r\n    if (\r\n      offsetX > this.margin.left &&\r\n      offsetX < this.viewport.width + this.margin.left &&\r\n      offsetY > this.margin.top &&\r\n      offsetY < this.viewport.height + this.margin.top\r\n    ) {\r\n      let x = this.xScale.invert(offsetX - this.margin.left);\r\n      if (this.data instanceof Array) {\r\n        let index = this.data.findIndex(d => d.time > x);\r\n        let sX = this.xScale(this.data[index].time);\r\n        if (dot.empty()) {\r\n          this.svg\r\n            .append(\"circle\")\r\n            .attr(\"cx\", sX)\r\n            .attr(\"cy\", this.yScale(this.data[index].value))\r\n            .attr(\"r\", 5)\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"white\");\r\n        } else {\r\n          dot\r\n            .attr(\"cx\", this.xScale(this.data[index].time))\r\n            .attr(\"cy\", this.yScale(this.data[index].value));\r\n          this.tooltip\r\n            .html(\r\n              `<p>${new Date(\r\n                this.data[index].time\r\n              ).toLocaleString()}</p><p>Value: ${this.data[index].value.toFixed(\r\n                2\r\n              )}</p>`\r\n            )\r\n            .classed(\"show\", true)\r\n            .style(\r\n              \"top\",\r\n              Math.floor(\r\n                this.yScale(this.data[index].value) + this.margin.top - 3\r\n              ) + \"px\"\r\n            )\r\n            .style(\"left\", Math.floor(sX + this.margin.left + 5) + \"px\")\r\n            .style(\r\n              \"margin-left\",\r\n              sX > this.viewport.width / 2 ? \"-130px\" : \"0px\"\r\n            );\r\n        }\r\n      }\r\n    } else {\r\n      if (!dot.empty()) {\r\n        dot.remove();\r\n      }\r\n      this.tooltip.classed(\"show\", false);\r\n    }\r\n  }\r\n\r\n  public plot(on?: string) {\r\n    // Events\r\n    if (this.data instanceof Array && this.data.length > 1) {\r\n      d3.select(this.svgHTML).on(\"mousemove\", () => this.showTip());\r\n      d3.select(this.svgHTML).on(\"mouseleave\", () => {\r\n        this.svg.select(\"circle\").remove();\r\n        this.tooltip.classed(\"show\", false);\r\n      });\r\n    }\r\n    let t = d3\r\n      .transition()\r\n      .duration(500)\r\n      .ease(d3.easeLinear);\r\n    let line = d3\r\n      .line()\r\n      .x((d: any) => this.xScale(new Date(d.time)))\r\n      .y((d: any) => this.yScale(d.value))\r\n      .curve(d3.curveMonotoneX);\r\n    // x axis\r\n    const bottomAxis = d3\r\n      .axisBottom(this.xScale)\r\n      .ticks(Math.floor(this.viewport.width / 60));\r\n    this.xAxis\r\n      .attr(\r\n        \"transform\",\r\n        `translate(${this.margin.left}, ${this.viewport.height +\r\n          this.margin.top})`\r\n      )\r\n      .call(bottomAxis);\r\n    // y axis\r\n    const axisLeft = d3\r\n      .axisLeft(this.yScale)\r\n      .ticks(Math.floor(this.viewport.height / 20));\r\n    this.yAxis.call(axisLeft);\r\n    this.dashedLines.html(\"\");\r\n    (axisLeft.scale() as any)\r\n      .ticks(Math.floor(this.viewport.height / 20))\r\n      .forEach((d: number[]) => {\r\n        this.dashedLines\r\n          .append(\"line\")\r\n          .classed(\"dashed-line\", true)\r\n          .attr(\"x1\", 0)\r\n          .attr(\"y1\", this.yScale(d))\r\n          .attr(\"x2\", this.viewport.width)\r\n          .attr(\"y2\", this.yScale(d));\r\n      });\r\n    if (this.data instanceof Array) {\r\n      //path\r\n      this.line\r\n        .datum(this.data)\r\n        .attr(\"d\", line as any)\r\n        .attr(\r\n          \"stroke\",\r\n          this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n            this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n            this.conf.name === MENU_OPTIONS.LIGHT\r\n            ? \"url(#linegradient)\"\r\n            : colors[0]\r\n        );\r\n      if (on === \"update\") {\r\n        this.line\r\n\r\n          .attr(\r\n            \"stroke-dasharray\",\r\n            this.line.node().getTotalLength() +\r\n              \" \" +\r\n              this.line.node().getTotalLength()\r\n          )\r\n          .attr(\"stroke-dashoffset\", this.line.node().getTotalLength())\r\n          .transition()\r\n          .duration(700)\r\n          .attr(\"stroke-dashoffset\", 0);\r\n      }\r\n      if (on === \"start\") {\r\n        this.svg\r\n          .attr(\"opacity\", 0)\r\n          .transition(t as any)\r\n          .attr(\"opacity\", 1);\r\n      }\r\n      // circles\r\n      this.svg.selectAll(\".dot\");\r\n    } else if (typeof this.data === \"object\") {\r\n      let i = 0;\r\n      for (let key in this.data) {\r\n        //path\r\n        this.line[i].datum(this.data[key]).attr(\"d\", <any>line);\r\n        if (on === \"update\") {\r\n          this.line[i]\r\n            .attr(\r\n              \"stroke-dasharray\",\r\n              this.line[i].node().getTotalLength() +\r\n                \" \" +\r\n                this.line[i].node().getTotalLength()\r\n            )\r\n            .attr(\"stroke-dashoffset\", this.line[i].node().getTotalLength())\r\n            .transition()\r\n            .duration(700)\r\n            .attr(\"stroke-dashoffset\", 0);\r\n        }\r\n        if (on === \"start\") {\r\n          this.svg\r\n            .attr(\"opacity\", 0)\r\n            .transition(<any>t)\r\n            .attr(\"opacity\", 1);\r\n        }\r\n        // circles\r\n        this.svg.selectAll(\".dot\");\r\n        i++;\r\n      }\r\n    }\r\n  }\r\n\r\n  public clean() {\r\n    delete this.svg;\r\n    delete this.svgHTML;\r\n    delete this.viewport;\r\n    delete this.margin;\r\n    delete this.data;\r\n    delete this.liveData;\r\n    delete this.yScale;\r\n    delete this.xScale;\r\n    delete this.conf;\r\n    delete this.tooltip;\r\n    delete this.line;\r\n    delete this.xAxis;\r\n    delete this.yAxis;\r\n    delete this.clip;\r\n    delete this.dashedLines;\r\n  }\r\n\r\n  public resize() {\r\n    if (\r\n      this.conf.name === MENU_OPTIONS.TEMPERATURE ||\r\n      this.conf.name === MENU_OPTIONS.MOISTURE ||\r\n      this.conf.name === MENU_OPTIONS.LIGHT\r\n    ) {\r\n      d3LineGradients.drawGradient(this.svg, this.viewport, this.conf.name);\r\n    }\r\n    this.clip\r\n      .attr(\"width\", this.viewport.width)\r\n      .attr(\"height\", this.viewport.height);\r\n    if (this.liveData.length !== 0) {\r\n      console.log(this.liveData);\r\n      this.getXScale(this.liveData);\r\n      this.getYScale(this.liveData);\r\n      this.plotLive();\r\n    } else if (!this.live) {\r\n      this.getXScale(this.data);\r\n      this.getYScale(this.data);\r\n      this.plot();\r\n    }\r\n  }\r\n\r\n  private getXScale(data: HistoryData) {\r\n    if (data instanceof Array) {\r\n      this.xScale = d3\r\n        .scaleTime()\r\n        .domain([new Date(data[0].time), new Date(data[data.length - 1].time)])\r\n        .range([0, this.viewport.width]);\r\n    } else if (typeof data === \"object\") {\r\n      let minmax = [];\r\n      for (let key in data) {\r\n        minmax.push(...d3.extent(data[key], d => d.time));\r\n      }\r\n      minmax = d3.extent(minmax as any);\r\n      this.xScale = d3\r\n        .scaleTime()\r\n        .domain([new Date(minmax[0] as any), new Date(minmax[1] as any)])\r\n        .range([0, this.viewport.width]);\r\n    }\r\n  }\r\n\r\n  private getYScale(data: HistoryData) {\r\n    if (data instanceof Array) {\r\n      this.yScale = d3\r\n        .scaleLinear()\r\n        .domain(<[number, number]>d3.extent(data, d => d.value))\r\n        .range([this.viewport.height, 0]);\r\n    } else if (typeof data === \"object\") {\r\n      let minmax: (number | undefined)[] = [];\r\n      for (let key in data) {\r\n        minmax.push(...d3.extent(data[key], d => d.value));\r\n      }\r\n      this.yScale = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(minmax as any) as any)\r\n        .range([this.viewport.height, 0]);\r\n    }\r\n  }\r\n}\r\n","import React, { useEffect, useRef, useState, useLayoutEffect } from \"react\";\r\nimport {\r\n  IViewport,\r\n  HistoryData,\r\n  IHistoryData,\r\n  GraphConfiguration,\r\n  TimePeriod\r\n} from \"../../types\";\r\nimport * as d3 from \"d3\";\r\nimport ControlPane from \"../ControlPane\";\r\nimport D3Graph from \"../../d3/d3Graph\";\r\n\r\ntype GraphProps = {\r\n  viewport: IViewport;\r\n  data: HistoryData;\r\n  conf: GraphConfiguration;\r\n  control?: {\r\n    shouldRenderLive: boolean;\r\n  };\r\n};\r\n\r\nconst Graph: React.FC<GraphProps> = ({\r\n  viewport,\r\n  data,\r\n  conf,\r\n  control = { shouldRenderLive: true }\r\n}) => {\r\n  const container = useRef<HTMLDivElement>(null);\r\n  const [live, setLive] = useState<boolean>(false);\r\n  const [timePeriod, setTimePeriod] = useState<TimePeriod[]>([\r\n    { timePeriod: 5, selected: true },\r\n    { timePeriod: 15, selected: false },\r\n    { timePeriod: 30, selected: false }\r\n  ]);\r\n  const [d3chart, setD3chart] = useState<D3Graph | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (data && d3chart && container.current) {\r\n      d3chart.setData(data);\r\n    }\r\n  }, [data, d3chart]);\r\n\r\n  useEffect(() => {\r\n    if (d3chart) {\r\n      d3chart.setConf(\r\n        {\r\n          ...conf,\r\n          timePeriod: timePeriod.filter((t: TimePeriod) => t.selected)[0]\r\n        },\r\n        data\r\n      );\r\n    }\r\n  }, [timePeriod]);\r\n\r\n  useEffect(() => {\r\n    if (d3chart) {\r\n      d3chart.plot(\"start\");\r\n    }\r\n  }, [d3chart]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      let el = document.getElementById(conf.id);\r\n      if (el && container.current) {\r\n        container.current.removeChild(el);\r\n      }\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    if (container.current) {\r\n      let el = container.current;\r\n      if (el.childNodes.length === 1) {\r\n        d3.select(el)\r\n          .append(\"svg\")\r\n          .attr(\"id\", conf.id)\r\n          .attr(\"width\", viewport.width)\r\n          .attr(\"height\", viewport.height);\r\n        const svg = document.getElementById(conf.id);\r\n        if (svg) {\r\n          const chart = new D3Graph({\r\n            svg,\r\n            viewport,\r\n            data,\r\n            conf: {\r\n              ...conf,\r\n              timePeriod: timePeriod.filter((t: TimePeriod) => t.selected)[0]\r\n            }\r\n          });\r\n          setD3chart(chart);\r\n        }\r\n\r\n        return () => {\r\n          if (d3chart) {\r\n            d3chart.clean();\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }, [container.current]);\r\n\r\n  useEffect(() => {\r\n    if (container.current) {\r\n      const svg = document.getElementById(conf.id);\r\n      if (svg) {\r\n        const rect = svg.getBoundingClientRect();\r\n        if (rect.height !== viewport.height || rect.width !== viewport.width) {\r\n          if (d3chart) {\r\n            d3chart.setViewport(viewport);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [viewport]);\r\n\r\n  useEffect(() => {\r\n    if (d3chart) {\r\n      if (live) {\r\n        d3chart.goLive();\r\n        const id = setInterval(async () => {\r\n          const json = await fetch(\r\n            `http://dowav-api.herokuapp.com/api/live/${conf.name}`\r\n          );\r\n          const data = await json.json();\r\n          if (conf.zone) {\r\n            d3chart.addLiveData(data[conf.zone - 1]);\r\n          } else {\r\n            console.error(\r\n              \"Please specify zone for Graphh with name \" + conf.name\r\n            );\r\n          }\r\n        }, 2000);\r\n        return () => {\r\n          clearInterval(id);\r\n        };\r\n      }\r\n    }\r\n  }, [d3chart, live]);\r\n\r\n  return (\r\n    <div className={`graph ${conf.name} ${live ? \"live\" : \"\"}`}>\r\n      <div ref={container}>\r\n        <ControlPane\r\n          shouldRenderLive={control.shouldRenderLive}\r\n          live={live}\r\n          setLive={() => {\r\n            if (live && d3chart) {\r\n              d3chart.goHistory();\r\n            }\r\n            setLive(!live);\r\n          }}\r\n          setTimePeriod={setTimePeriod}\r\n          conf={{ ...conf, timePeriod: timePeriod }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import { ErrorMessages } from '../types';\r\n\r\nexport const fetchErrorMessages: ErrorMessages = {\r\n    timeout: {\r\n        title: 'Error',\r\n        message:\r\n            'Looks like the server is taking to long to respond, please try again in sometime.',\r\n        actions: ['refetch']\r\n    },\r\n    fetchFail: {\r\n        title: 'Error',\r\n        message: \"We can't get data right now. Try a little bit later\",\r\n        actions: ['refetch']\r\n    },\r\n    noData: {\r\n        title: 'No Data.',\r\n        message: 'Seems like there is no data available at the moment.',\r\n        actions: ['refetch']\r\n    }\r\n};\r\n","type FetchConstants = {\r\n    hostname: string;\r\n};\r\n\r\nconst FetchConstants: FetchConstants = {\r\n    hostname: 'https://dowav-api.herokuapp.com'\r\n};\r\n\r\nexport default FetchConstants;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { UseFetchState } from \"../types/index\";\r\nimport { fetchErrorMessages } from \"../errors/errors\";\r\nimport FetchConstants from \"../constants/FetchConstants\";\r\n\r\nfunction checkCache(key: string): any | null {\r\n  const lastFetched = window.localStorage.getItem(key + \"lastFetched\");\r\n  if (\r\n    lastFetched &&\r\n    moment(+lastFetched).isAfter(moment().add(-5, \"minutes\"))\r\n  ) {\r\n    const cache = window.localStorage.getItem(key);\r\n    if (cache) return JSON.parse(cache);\r\n  }\r\n  return null;\r\n}\r\n\r\ntype Params = {\r\n  [key: string]: string | number;\r\n};\r\n\r\ntype Options = {\r\n  useCache: boolean;\r\n  query: {\r\n    endpoint: string;\r\n    params?: Params;\r\n  };\r\n  refetch: number;\r\n};\r\n\r\nfunction generateQueryString(params: Params | undefined): string {\r\n  if (params === undefined) return \"\";\r\n  const keys = Object.keys(params);\r\n  if (keys.length === 0) return \"\";\r\n  let string = \"?\";\r\n  for (let i = 0; i < keys.length; i++) {\r\n    string += `${keys[i]}=${params[keys[i]]}${\r\n      i === keys.length - 1 ? \"\" : \"&\"\r\n    }`;\r\n  }\r\n  return string;\r\n}\r\n\r\nexport default function useFetch(options: Options): UseFetchState {\r\n  const cache = options.useCache ? checkCache(options.query.endpoint) : null;\r\n  const [state, setState] = useState<UseFetchState>({\r\n    loading: cache ? false : true,\r\n    data: cache || null,\r\n    error: null\r\n  });\r\n\r\n  function fetchData() {\r\n    console.log(\"useFetc\", state);\r\n    new Promise(async (resolve, reject) => {\r\n      const time = Date.now();\r\n      const id = setTimeout(() => {\r\n        reject(fetchErrorMessages.timeout);\r\n      }, 10000);\r\n      try {\r\n        const response = await fetch(\r\n          `${FetchConstants.hostname}${\r\n            options.query.endpoint\r\n          }${generateQueryString(options.query.params)}`\r\n        );\r\n        const json = await response.json();\r\n        console.log(json);\r\n        clearTimeout(id);\r\n        if (json === null) reject(fetchErrorMessages.noData);\r\n        if (options.useCache) {\r\n          window.localStorage.setItem(\r\n            options.query.endpoint,\r\n            JSON.stringify(json)\r\n          );\r\n          window.localStorage.setItem(\r\n            options.query.endpoint + \"lastFetched\",\r\n            Date.now() + \"\"\r\n          );\r\n        }\r\n        if (Date.now() - time > 500) {\r\n          resolve(json);\r\n        } else {\r\n          setTimeout(() => {\r\n            resolve(json);\r\n          }, Date.now() - time);\r\n        }\r\n      } catch (err) {\r\n        reject(fetchErrorMessages.fetchFail);\r\n      }\r\n    })\r\n      .then(d => {\r\n        setState({\r\n          loading: false,\r\n          data: d,\r\n          error: null\r\n        });\r\n      })\r\n      .catch(error => {\r\n        setState({\r\n          loading: false,\r\n          error,\r\n          data: null\r\n        });\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (options.refetch !== 0) {\r\n      if (options.useCache) {\r\n        const data = checkCache(options.query.endpoint);\r\n        if (data) {\r\n          setState({ loading: false, data, error: null });\r\n        } else {\r\n          setState({ loading: true, data: null, error: null });\r\n          fetchData();\r\n        }\r\n      } else {\r\n        setState({ loading: true, data: null, error: null });\r\n        fetchData();\r\n      }\r\n    }\r\n  }, [options.refetch]);\r\n\r\n  useEffect(() => {\r\n    if (!cache) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n  return { ...state };\r\n}\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { IViewport } from \"../../types\";\r\nimport d3Colors from \"../../d3/d3Colors\";\r\nimport * as MENU_OPTIONS from \"../../constants/MenuOptionConstants\";\r\n\r\nconst rotate = keyframes`\r\n    0%{\r\n        stroke-dashoffset: 290;\r\n    }\r\n    50%{\r\n        stroke-dashoffset: 50;\r\n    }\r\n    100%{\r\n        stroke-dashoffset: 290;\r\n    }\r\n`;\r\n\r\nconst Circle = styled.circle`\r\n  cx: 50%;\r\n  cy: 50%;\r\n  r: 50;\r\n  fill: none;\r\n  stroke-width: 10px;\r\n  stroke-dasharray: 160;\r\n  transform-origin: 50% 50%;\r\n  animation: ${rotate} 2s ease infinite;\r\n`;\r\n\r\ntype LoaderProps = {\r\n  size: IViewport | { width: number | string; height: number | string };\r\n  currentOption?: string;\r\n};\r\n\r\nconst Loader: React.FC<LoaderProps> = ({\r\n  size,\r\n  currentOption = MENU_OPTIONS.LIGHT\r\n}) => {\r\n  return (\r\n    <svg\r\n      stroke={d3Colors[currentOption][1]}\r\n      width={size.width}\r\n      height={size.height}\r\n      className=\"loader\"\r\n    >\r\n      <Circle />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { FetchError, IViewport } from \"../types\";\r\nimport { IoIosRefresh } from \"react-icons/io\";\r\n\r\nconst ErrorMessage: React.FC<{\r\n  error: FetchError;\r\n  onRefetch?: any;\r\n  size?: { width: number | string; height: number | string };\r\n}> = ({\r\n  error,\r\n  onRefetch = () => console.warn(\"You haven't passed a fucntion\"),\r\n  size = { width: \"100%\", height: \"100%\" }\r\n}) => {\r\n  return (\r\n    <div className=\"error-box\" style={{ ...size }}>\r\n      <h1>{error.title}</h1>\r\n      <p>{error.message}</p>\r\n      {error && error.actions && error.actions.includes(\"refetch\") ? (\r\n        <div>\r\n          <IoIosRefresh\r\n            size=\"40\"\r\n            color=\"white\"\r\n            className=\"refetch-icon\"\r\n            onClick={onRefetch}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { IViewport, IHistoryData, MultipleHistoryData } from \"../../types\";\r\nimport Graph from \"./Graph\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport Loader from \"../styled/Loader\";\r\nimport ErrorMessage from \"../../errors/ErrorMessage\";\r\n\r\ntype GraphViewProps = {\r\n  currentOption: string;\r\n};\r\n\r\nconst GraphView: React.FC<GraphViewProps> = ({ currentOption }) => {\r\n  const [count, setCount] = useState<number>(0);\r\n  const [size, setSize] = useState<IViewport | null>(null);\r\n  const graphRef = useRef<HTMLDivElement>(null);\r\n  const { loading, data, error } = useFetch({\r\n    useCache: true,\r\n    query: {\r\n      endpoint: `/api/historic/${currentOption.toLowerCase()}`,\r\n      params: {\r\n        from: 1,\r\n        to: Math.floor(Date.now() / 1000)\r\n      }\r\n    },\r\n    refetch: count\r\n  });\r\n\r\n  const updateSize = () => {\r\n    if (graphRef.current) {\r\n      let viewport = graphRef.current.getBoundingClientRect();\r\n      setSize({ width: viewport.width, height: viewport.height });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graphRef.current) {\r\n      updateSize();\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, [graphRef.current]);\r\n  return (\r\n    <div ref={graphRef} className=\"graph-view\">\r\n      {size ? (\r\n        <>\r\n          {loading ? (\r\n            <Loader size={size} currentOption={currentOption} />\r\n          ) : error ? (\r\n            <div className=\"error-message\">\r\n              <ErrorMessage\r\n                error={error}\r\n                onRefetch={() => {\r\n                  setCount(count + 1);\r\n                }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"graph-view-row\">\r\n                <Graph\r\n                  data={data[0]}\r\n                  viewport={{\r\n                    width: (size.width - 50) / 3,\r\n                    height: (size.height - 100) / 2\r\n                  }}\r\n                  conf={{\r\n                    name: currentOption,\r\n                    id: currentOption + 1,\r\n                    zone: 1\r\n                  }}\r\n                />\r\n                <Graph\r\n                  data={data[1]}\r\n                  viewport={{\r\n                    width: (size.width - 50) / 3,\r\n                    height: (size.height - 100) / 2\r\n                  }}\r\n                  conf={{\r\n                    name: currentOption,\r\n                    id: currentOption + 2,\r\n                    zone: 2\r\n                  }}\r\n                />\r\n                <Graph\r\n                  data={data[2]}\r\n                  viewport={{\r\n                    width: (size.width - 50) / 3,\r\n                    height: (size.height - 100) / 2\r\n                  }}\r\n                  conf={{\r\n                    name: currentOption,\r\n                    id: currentOption + 3,\r\n                    zone: 3\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"graph-view-row\">\r\n                <Graph\r\n                  data={{\r\n                    zoneA: data[0],\r\n                    zoneB: data[1],\r\n                    zoneC: data[2]\r\n                  }}\r\n                  control={{ shouldRenderLive: false }}\r\n                  viewport={{\r\n                    width: size.width - 10,\r\n                    height: (size.height - 100) / 2\r\n                  }}\r\n                  conf={{\r\n                    name: currentOption,\r\n                    id: currentOption + 4\r\n                  }}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n          {/* <div className=\"graph-view-row\">\r\n                     <GraphData\r\n                            setGraphsData={setGraphsData}\r\n                            currentOption={currentOption}\r\n                            zone={1}\r\n                            size={{\r\n                                width: (size.width - 50) / 3,\r\n                                height: (size.height - 100) / 2\r\n                            }}\r\n                        />\r\n                        <GraphData\r\n                            setGraphsData={setGraphsData}\r\n                            currentOption={currentOption}\r\n                            zone={2}\r\n                            size={{\r\n                                width: (size.width - 50) / 3,\r\n                                height: (size.height - 100) / 2\r\n                            }}\r\n                        />\r\n                        <GraphData\r\n                            setGraphsData={setGraphsData}\r\n                            currentOption={currentOption}\r\n                            zone={3}\r\n                            size={{\r\n                                width: (size.width - 50) / 3,\r\n                                height: (size.height - 100) / 2\r\n                            }}\r\n                        /> \r\n                        {[1, 2, 3].map((d: number) => (\r\n                            <GraphData\r\n                                key={d}\r\n                                setGraphsData={setGraphsData}\r\n                                currentOption={currentOption}\r\n                                zone={d}\r\n                                size={{\r\n                                    width: (size.width - 50) / 3,\r\n                                    height: (size.height - 100) / 2\r\n                                }}\r\n                            />\r\n                        ))}\r\n                        {data ? (\r\n                            <>\r\n                                <Graph\r\n                                    data={data[0]}\r\n                                    viewport={{\r\n                                        width: (size.width - 50) / 3,\r\n                                        height: (size.height - 100) / 2\r\n                                    }}\r\n                                    conf={{\r\n                                        name: currentOption,\r\n                                        id: currentOption + 1\r\n                                    }}\r\n                                />\r\n                                <Graph\r\n                                    data={data[1]}\r\n                                    viewport={{\r\n                                        width: (size.width - 50) / 3,\r\n                                        height: (size.height - 100) / 2\r\n                                    }}\r\n                                    conf={{\r\n                                        name: currentOption,\r\n                                        id: currentOption + 2\r\n                                    }}\r\n                                />\r\n                                <Graph\r\n                                    data={data[2]}\r\n                                    viewport={{\r\n                                        width: (size.width - 50) / 3,\r\n                                        height: (size.height - 100) / 2\r\n                                    }}\r\n                                    conf={{\r\n                                        name: currentOption,\r\n                                        id: currentOption + 3\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"graph-view-row\">\r\n                        {false ? (\r\n                            <Graph\r\n                                data={graphsData}\r\n                                control={{ shouldRenderLive: false }}\r\n                                viewport={{\r\n                                    width: size.width - 10,\r\n                                    height: (size.height - 100) / 2\r\n                                }}\r\n                                conf={{\r\n                                    name: currentOption,\r\n                                    id: currentOption + 4\r\n                                }}\r\n                            />\r\n                        ) : null}\r\n                    </div> */}\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphView;\r\n","import React from \"react\";\r\nimport { LocationData } from \"../types\";\r\n\r\ntype LocationDataContext = {\r\n  data: LocationData[];\r\n  appendData(data: LocationData): void;\r\n};\r\n\r\nexport default React.createContext<LocationDataContext>({\r\n  data: [],\r\n  appendData: n => {\r\n    throw new Error(\"appenData() not implemented.\");\r\n  }\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport moment from \"moment\";\r\nimport LocationDataContext from \"../context/LocationDataContext\";\r\n\r\nconst HistoryList: React.FC = () => {\r\n  const { data } = useContext(LocationDataContext);\r\n  return (\r\n    <div className=\"history-list\">\r\n      <h1>History</h1>\r\n      <h4>Last 24 hours</h4>\r\n      {data.map(d => {\r\n        let val = 255 - (d.value - 1) * 30;\r\n        return (\r\n          <div\r\n            className=\"historic-item\"\r\n            style={{ background: `rgb(${val}, ${val}, ${val})` }}\r\n          >{`${moment(d.time).format(\"D MMM HH:mm:ss\")} - Zone ${\r\n            d.value\r\n          }`}</div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryList;\r\n","import * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport { IViewport, LocationData } from \"../types\";\r\n\r\ntype Lab3DProps = {\r\n  viewport: IViewport;\r\n  container: HTMLDivElement;\r\n};\r\n\r\nexport default class Lab3D {\r\n  private scene: THREE.Scene;\r\n  private camera: THREE.PerspectiveCamera;\r\n  private renderer: THREE.WebGLRenderer;\r\n  private controls: OrbitControls;\r\n  private cube: THREE.Mesh;\r\n  private locationData: LocationData | null;\r\n  constructor(options: Lab3DProps) {\r\n    this.scene = new THREE.Scene();\r\n    this.locationData = null;\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      options.viewport.width / options.viewport.height,\r\n      0.1,\r\n      1000\r\n    );\r\n    this.controls = new OrbitControls(this.camera, options.container);\r\n    this.renderer = new THREE.WebGLRenderer({ alpha: true });\r\n    this.renderer.setClearColor(0x000000, 0);\r\n    this.renderer.setSize(options.viewport.width, options.viewport.height);\r\n    options.container.appendChild(this.renderer.domElement);\r\n\r\n    // Add a light\r\n    const sun = new THREE.PointLight(0xffffff, 1.6, 0);\r\n    sun.position.set(0, 50, 0);\r\n    this.scene.add(sun);\r\n    const lightRight = new THREE.PointLight(0xffffff, 0.6, 0);\r\n    lightRight.position.set(-20, 12, -25);\r\n    this.scene.add(lightRight);\r\n    const lightLeft = new THREE.PointLight(0xffffff, 0.6, 0);\r\n    lightLeft.position.set(18, 12, 18);\r\n    this.scene.add(lightLeft);\r\n\r\n    // Create box\r\n    this.cube = this.createBox();\r\n\r\n    // Add 3d model\r\n    let loader = new GLTFLoader();\r\n    loader.load(\r\n      `${process.env.PUBLIC_URL}/labmodel.glb`,\r\n      gltf => {\r\n        this.scene.add(gltf.scene);\r\n        this.camera.position.set(-14, 10, -9);\r\n        this.camera.lookAt(0, 0, 0);\r\n        this.controls.update();\r\n      },\r\n      xhr => {\r\n        console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\r\n      },\r\n      error => {\r\n        console.log(\"ERROR. Can't load the model\");\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    requestAnimationFrame(this.animate);\r\n    this.animate();\r\n  }\r\n\r\n  private createBox = () => {\r\n    let geometry = new THREE.BoxGeometry(10.2, 2.5, 4.5333);\r\n    let cubeMaterials = [\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.65,\r\n        side: THREE.DoubleSide\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.7,\r\n        side: THREE.DoubleSide\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.66,\r\n        side: THREE.DoubleSide\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.67,\r\n        side: THREE.DoubleSide\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.68,\r\n        side: THREE.DoubleSide\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        color: 0x2aa4d1,\r\n        transparent: true,\r\n        opacity: 0.69,\r\n        side: THREE.DoubleSide\r\n      })\r\n    ];\r\n    return new THREE.Mesh(geometry, cubeMaterials);\r\n  };\r\n\r\n  public updateViewport = (viewport: IViewport) => {\r\n    this.camera.aspect = viewport.width / viewport.height;\r\n    this.camera.updateProjectionMatrix();\r\n    this.renderer.setSize(viewport.width, viewport.height);\r\n  };\r\n\r\n  private highlightZone = () => {\r\n    if (this.locationData) {\r\n      this.cube.position.set(\r\n        0,\r\n        1.4,\r\n        4.53 * (this.locationData.value - 1) - 4.53\r\n      );\r\n      this.scene.remove(this.cube);\r\n      this.scene.add(this.cube);\r\n    }\r\n  };\r\n\r\n  public addLocationData = (data: LocationData) => {\r\n    this.locationData = data;\r\n    this.highlightZone();\r\n  };\r\n\r\n  private animate = () => {\r\n    requestAnimationFrame(this.animate);\r\n\r\n    this.controls.update();\r\n\r\n    this.renderer.render(this.scene, this.camera);\r\n  };\r\n}\r\n","import React, { useRef, useState, useEffect, useContext } from \"react\";\r\nimport { IViewport } from \"../types\";\r\nimport Lab3D from \"../three/Lab3D\";\r\nimport LocationDataContext from \"../context/LocationDataContext\";\r\n\r\ntype Lab3DModelProps = {\r\n  viewport: IViewport;\r\n};\r\n\r\nconst Lab3DModel: React.FC<Lab3DModelProps> = ({ viewport }) => {\r\n  const container = useRef<HTMLDivElement>(null);\r\n  const [lab3d, setLab3d] = useState<Lab3D | null>(null);\r\n  const { data, appendData } = useContext(LocationDataContext);\r\n\r\n  useEffect(() => {\r\n    if (container.current && !lab3d) {\r\n      console.log(\"Creating new lab\");\r\n      setLab3d(new Lab3D({ viewport, container: container.current }));\r\n    }\r\n  }, [container.current]);\r\n\r\n  useEffect(() => {\r\n    if (lab3d) {\r\n      lab3d.updateViewport(viewport);\r\n    }\r\n  }, [viewport]);\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0 && lab3d) {\r\n      let last = data[data.length - 1];\r\n      lab3d.addLocationData(last);\r\n      let id = setInterval(async () => {\r\n        try {\r\n          const response = await fetch(\r\n            \"http://dowav-api.herokuapp.com/api/location/live\"\r\n          );\r\n          const json = await response.json();\r\n          console.log(json);\r\n          appendData(json);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }, 500);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [data, lab3d]);\r\n\r\n  return (\r\n    <div\r\n      ref={container}\r\n      style={{\r\n        width: viewport.width,\r\n        height: viewport.height,\r\n        outline: \"none\"\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Lab3DModel;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { IViewport, LocationData } from \"../../types\";\r\nimport HistoryList from \"../HistoryList\";\r\nimport Lab3DModel from \"../Lab3DModel\";\r\nimport LocationDataContext from \"../../context/LocationDataContext\";\r\nimport Loader from \"../styled/Loader\";\r\nimport ErrorMessage from \"../../errors/ErrorMessage\";\r\n\r\nconst MovementView: React.FC = () => {\r\n  const [count, setCount] = useState(0);\r\n  const [savedData, setSavedData] = useState<LocationData[]>([]);\r\n  const [size, setSize] = useState<IViewport | null>(null);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const { loading, data, error } = useFetch({\r\n    useCache: false,\r\n    query: {\r\n      endpoint: `/api/location/historic`\r\n    },\r\n    refetch: count\r\n  });\r\n  const updateSize = () => {\r\n    if (ref.current) {\r\n      let viewport = ref.current.getBoundingClientRect();\r\n      setSize({ width: viewport.width, height: viewport.height });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      updateSize();\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, [ref.current]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setSavedData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div ref={ref} className=\"movement-view\">\r\n      {size ? (\r\n        <>\r\n          <LocationDataContext.Provider\r\n            value={{\r\n              data: savedData,\r\n              appendData: d => {\r\n                if (savedData.length === 0) {\r\n                  setSavedData(prev => {\r\n                    return [...prev, d];\r\n                  });\r\n                } else {\r\n                  let last = savedData[savedData.length - 1];\r\n                  if (last.time < d.time) {\r\n                    setSavedData(prev => {\r\n                      return [...prev, d];\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <Lab3DModel viewport={{ ...size, width: size.width - 250 }} />\r\n            {loading ? (\r\n              <Loader size={{ width: 250, height: \"100%\" }} />\r\n            ) : error ? (\r\n              <ErrorMessage\r\n                error={{\r\n                  title: \"Something bad happened.\",\r\n                  message:\r\n                    \"We can't get location data at the moment. Please try later.\"\r\n                }}\r\n                size={{ width: 250, height: \"100%\" }}\r\n              />\r\n            ) : data ? (\r\n              <HistoryList />\r\n            ) : null}\r\n          </LocationDataContext.Provider>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovementView;\r\n","import React, { useContext } from 'react';\r\nimport NavigationContext from '../context/NavigationContext';\r\nimport * as MENU_OPTIONS from '../constants/MenuOptionConstants';\r\nimport DashboardView from './views/DashboardView';\r\nimport GraphView from './views/GraphView';\r\nimport MovementView from './views/MovementView';\r\n\r\nconst Switch: React.FC = () => {\r\n    const { currentOption } = useContext(NavigationContext);\r\n\r\n    let component = null;\r\n    switch (currentOption) {\r\n        case MENU_OPTIONS.DASHBOARD:\r\n            component = <DashboardView />;\r\n            break;\r\n        case MENU_OPTIONS.TEMPERATURE:\r\n        case MENU_OPTIONS.MOISTURE:\r\n        case MENU_OPTIONS.LIGHT:\r\n            component = (\r\n                <GraphView key={currentOption} currentOption={currentOption} />\r\n            );\r\n            break;\r\n        case MENU_OPTIONS.MOVEMENT:\r\n            component = <MovementView />;\r\n            break;\r\n        default:\r\n            component = (\r\n                <div className=\"not-implemented\">\r\n                    <h1>404</h1>\r\n                    <p>Not implemented yet. Coming soon. </p>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    return <div className=\"switch\">{component}</div>;\r\n};\r\n\r\nexport default Switch;\r\n","import React from 'react';\r\nimport Menu from './Menu';\r\nimport Switch from './Switch';\r\n\r\nconst Dashboard: React.FC = () => {\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Menu />\r\n            <Switch />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport \"./main.scss\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport NavigationContext from \"./context/NavigationContext\";\r\nimport {\r\n  DASHBOARD,\r\n  MOVEMENT,\r\n  TEMPERATURE\r\n} from \"./constants/MenuOptionConstants\";\r\n\r\nconst App: React.FC = () => {\r\n  const [navigation, setNavigation] = useState(MOVEMENT);\r\n\r\n  return (\r\n    <NavigationContext.Provider\r\n      value={{\r\n        currentOption: navigation,\r\n        setCurrentOption: s => {\r\n          setNavigation(s);\r\n        }\r\n      }}\r\n    >\r\n      <Dashboard />\r\n    </NavigationContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}